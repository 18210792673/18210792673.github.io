<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Watchmen1992&#39;s Blog</title>
  
  <subtitle>锦瑟年华当与书香为度，是为不负天地人生。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-03T09:01:56.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XiaoHua WANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis持久化</title>
    <link href="http://yoursite.com/2018/05/03/Redis%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>http://yoursite.com/2018/05/03/Redis持久化/</id>
    <published>2018-05-03T09:01:56.000Z</published>
    <updated>2018-05-03T09:01:56.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Redis调优</title>
    <link href="http://yoursite.com/2018/05/03/Redis%E8%B0%83%E4%BC%98/"/>
    <id>http://yoursite.com/2018/05/03/Redis调优/</id>
    <published>2018-05-03T08:59:25.000Z</published>
    <updated>2018-05-03T08:59:25.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Redis集群</title>
    <link href="http://yoursite.com/2018/05/03/Redis%E9%9B%86%E7%BE%A4/"/>
    <id>http://yoursite.com/2018/05/03/Redis集群/</id>
    <published>2018-05-03T08:58:15.000Z</published>
    <updated>2018-05-03T08:58:15.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Redis哨兵集群</title>
    <link href="http://yoursite.com/2018/05/03/Redis%E5%93%A8%E5%85%B5%E9%9B%86%E7%BE%A4/"/>
    <id>http://yoursite.com/2018/05/03/Redis哨兵集群/</id>
    <published>2018-05-03T08:58:03.000Z</published>
    <updated>2018-05-03T08:58:03.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Redis基础知识</title>
    <link href="http://yoursite.com/2018/05/03/Redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/05/03/Redis基础知识/</id>
    <published>2018-05-03T08:57:46.000Z</published>
    <updated>2018-05-03T08:57:46.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper常用命令</title>
    <link href="http://yoursite.com/2018/05/02/Zookeeper%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/02/Zookeeper常用命令/</id>
    <published>2018-05-02T11:43:32.000Z</published>
    <updated>2018-05-02T11:43:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="zk客户端命令"><a href="#zk客户端命令" class="headerlink" title="zk客户端命令"></a>zk客户端命令</h1><p>zookeeper命令行工具类似于Linux的shell环境，使用它我们可以简单的对zookeeper进行访问、数据创建、数据修改等操作</p><p><strong>语法：</strong></p><pre><code>$ sh zkCli.sh -server 127.0.0.1:2181</code></pre><p><strong>一些简单操作：</strong></p><ul><li>显示根目录下、文件： ls / 使用 ls 命令来查看当前 ZooKeeper 中所包含的内容</li></ul><ul><li>显示根目录下、文件： ls2 / 查看当前节点数据并能看到更新次数等数据</li></ul><ul><li>创建文件，并设置初始内容： create /zk “test” 创建一个新的 znode节点“ zk ”以及与它关联的字符串</li></ul><ul><li>获取文件内容： get /zk 确认 znode 是否包含我们所创建的字符串</li></ul><ul><li>修改文件内容： set /zk “zkbak” 对 zk 所关联的字符串进行设置</li></ul><ul><li>删除文件： delete /zk 将刚才创建的 znode 删除</li></ul><ul><li>退出客户端： quit</li></ul><ul><li>帮助命令： help</li></ul><p><strong>四字命令：</strong></p><p>ZooKeeper 支持某些特定的四字命令字母与其的交互。它们大多是查询命令，用来获取 ZooKeeper 服务的当前状态及相关信息。用户在客户端可以通过 telnet 或 nc 向 ZooKeeper 提交相应的命令</p><ul><li>echo stat|nc 127.0.0.1 2181 来查看哪个节点被选择作为follower或者leader</li></ul><ul><li>echo ruok|nc 127.0.0.1 2181 测试是否启动了该Server，若回复imok表示已经启动。</li></ul><ul><li>echo dump| nc 127.0.0.1 2181 ,列出未经处理的会话和临时节点。</li></ul><ul><li>echo kill | nc 127.0.0.1 2181 ,关掉server</li></ul><ul><li>echo conf | nc 127.0.0.1 2181 ,输出相关服务配置的详细信息。</li></ul><ul><li>echo cons | nc 127.0.0.1 2181 ,列出所有连接到服务器的客户端的完全的连接 / 会话的详细信息。</li></ul><ul><li>echo envi |nc 127.0.0.1 2181 ,输出关于服务环境的详细信息（区别于 conf 命令）。</li></ul><ul><li>echo reqs | nc 127.0.0.1 2181 ,列出未经处理的请求。</li></ul><ul><li>echo wchs | nc 127.0.0.1 2181 ,列出服务器 watch 的详细信息。</li></ul><ul><li>echo wchc | nc 127.0.0.1 2181 ,通过 session 列出服务器 watch 的详细信息，它的输出是一个与 watch 相关的会话的列表。</li></ul><ul><li>echo wchp | nc 127.0.0.1 2181 ,通过路径列出服务器 watch 的详细信息。它输出一个与 session 相关的路径。</li></ul>]]></content>
    
    <summary type="html">
    
      Zookeeper常用命令
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="大数据" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="大数据相关组件" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
    
      <category term="Zookeeper" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/Zookeeper/"/>
    
    
      <category term="Zookeeper常用命令" scheme="http://yoursite.com/tags/Zookeeper%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL普通用户无法本地登录的解决方法及MySQL的用户认证算法</title>
    <link href="http://yoursite.com/2018/05/02/MySQL%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E6%97%A0%E6%B3%95%E6%9C%AC%E5%9C%B0%E7%99%BB%E5%BD%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E5%8F%8AMySQL%E7%9A%84%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2018/05/02/MySQL普通用户无法本地登录的解决方法及MySQL的用户认证算法/</id>
    <published>2018-05-02T10:00:00.000Z</published>
    <updated>2018-05-02T10:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考文献：</strong></p><ul><li><a href="http://www.cnblogs.com/linuxnote/p/3780244.html" target="_blank" rel="noopener">MySQL普通用户无法本地登录的解决方法及MySQL的用户认证算法</a></li></ul><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在启动cachecloud项目的时候，发现日志中出现大量的连接数据库报错</p><p>我的授权命令为：</p><pre><code>mysql&gt; grant all privileges on cache_cloud.* to &apos;cachecloud&apos;@&apos;%&apos; identified by &apos;Cache_cloud123&apos;;Query OK, 0 rows affected (0.00 sec)</code></pre><p>这样的配置，按道理来说，是不应该出现连不上的（%代表任意的主机来源，并且已经排查了防火墙等因素）</p><p>在本地登录发现发现存在如下问题：</p><p><img src="http://picture.watchmen.xin/mysql/cachecloud.png" alt=""></p><p>当输入之前设置的密码时，将会一直提示：“ERROR 1045 (28000): Access denied”，而当我们不输入密码，也就是说输入密码为空时则能正常进入数据库。</p><p>我们使用USER()和CURRENT_USER()两个函数查看所使用的用户。</p><pre><code>mysql&gt; SELECT USER(), CURRENT_USER();+----------------------+----------------+| USER()               | CURRENT_USER() |+----------------------+----------------+| cachecloud@localhost | @localhost     |+----------------------+----------------+1 row in set (0.00 sec)mysql&gt; </code></pre><blockquote><p>USER()函数返回你在客户端登陆时指定的用户名和主机名。</p><p>CURRENT_USER()函数返回的是MySQL使用授权表中的哪个用户来认证你的登录请求。</p></blockquote><p>这里发现，之前设置的授权规则并没有生效，是数据库使用的是’’@’localhost’这个来源信息来进行登录认证，而’’@’localhost’这个匿名用户是没有密码的，因此我输入空密码登录成功了。但是登录后，所对应的用户的匿名用户。</p><p><strong>一般在MySQL在安装完毕后，我们使用mysql_install_db这个脚本生成<font color="red"><code>授权表</code></font>，会默认创建’’@’localhost’这个匿名用户。正是因为这个匿名用户，影响了其他用户从本地登录的认证。</strong></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>那么MySQL是如何进行用户身份认证呢？</p><p>MySQL的简要认证算法如下：</p><ul><li>当用户从客户端请求登陆时，MySQL将授权表中的条目与客户端所提供的条目进行比较，包括用户的用户名，密码和主机。</li></ul><ul><li>授权表中的Host字段是可以使用通配符作为模式进行匹配的，如test.example.com, %.example.com, %.com和%都可以匹配test.example.com这个主机。</li></ul><ul><li>授权表中的User字段不允许使用模式匹配，但是可以有一个空字符的用户名代表匿名用户，并且空字符串可以匹配所有的用户名，就像通配符一样。</li></ul><ul><li>当user表中的Host和User有多个值可以匹配客户端提供的主机和用户名时，MySQL将user表读入内存，并且按照一定规则排序，按照排序规则读取到的第一个匹配客户端用户名和主机名的条目对客户端进行身份验证。</li></ul><p><strong>排序规则：</strong></p><ul><li>对于Host字段，按照匹配的精确程度进行排序，越精确的排序越前，例如当匹配test.example.com这个主机时, %.example.com比%.com更精确，而test.example.com比%.example.com更精确。</li></ul><ul><li>对于User字段，非空的字符串用户名比空字符串匹配的用户名排序更靠前。</li></ul><ul><li>User和Host字段都有多个匹配值，MySQL使用主机名排序最前的条目，在主机名字段相同时再选取用户名排序更前的条目。</li></ul><ul><li>因此，如果User和Host字段都有多个匹配值，主机名最精确匹配的条目被用户对用户进行认证。</li></ul><p>了解了这个规则之后，我们就知道为什么cachecloud登录失败了。</p><p>在使用该用户进行本机登录的时候，mysql中有2个匹配条目</p><ol><li>‘cachecloud’@’%’ </li><li>‘’@’localhost’</li></ol><p>匿名用户能够匹配的原因上面说过，空字符串可以匹配所有的用户名，就像通配符一样。</p><p>根据MySQL认证时的排序规则，第一个条目的用户名排序更前，第二个条目的主机名更精确，排序更前。</p><p>而MySQL会优先使用主机名排序第一的条目进行身份认证，因此’’@’localhost’被用户对客户端进行认证。因此，只有使用匿名用户的空密码才能登录进数据库。就会出现刚才上面的情况了。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>删除匿名用户【仅仅是为了安全也有这个必要】</p><p><strong>为什么root用户不会受影响，而只有普通用户不能从本地登录？</strong></p><p>因为mysql_install_db脚本会在授权表中生成’root’@’localhost’这个账户。同样的，使用root登录MySQL时，’root’@’localhost’和’’@’localhost’都能匹配登录的账户，但是根据排序规则，主机名相同，而用户名非空字符串优先，因此’roo’@’localhost’这个条目的排序更靠前。使用root本地登录是不会被匿名用户遮盖。</p><pre><code>[root@qa1-common004 ~]# mysql -u root -p Enter password: Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 942Server version: 5.6.40 MySQL Community Server (GPL)Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.mysql&gt; mysql&gt; select user,host from mysql.user;+------------+---------------------------+| user       | host                      |+------------+---------------------------+| cachecloud | %                         || root       | 127.0.0.1                 || root       | ::1                       ||            | localhost                 || root       | localhost                 ||            | qa1-common004.ecs.east1-b || root       | qa1-common004.ecs.east1-b |+------------+---------------------------+7 rows in set (0.00 sec)mysql&gt; delete from mysql.user where user=&apos;&apos;;　Query OK, 2 rows affected (0.00 sec)mysql&gt; select user,host from mysql.user;　+------------+---------------------------+| user       | host                      |+------------+---------------------------+| cachecloud | %                         || root       | 127.0.0.1                 || root       | ::1                       || root       | localhost                 || root       | qa1-common004.ecs.east1-b |+------------+---------------------------+5 rows in set (0.00 sec)mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)mysql&gt; exit</code></pre><p>退出之后再次登录，问题得到解决。</p>]]></content>
    
    <summary type="html">
    
      MySQL普通用户无法本地登录的解决方法及MySQL的用户认证算法
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="数据库" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
      <category term="MySQL问题" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/MySQL%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Mysql密码设置修改及恢复</title>
    <link href="http://yoursite.com/2018/05/02/Mysql%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE%E4%BF%AE%E6%94%B9%E5%8F%8A%E6%81%A2%E5%A4%8D/"/>
    <id>http://yoursite.com/2018/05/02/Mysql密码设置修改及恢复/</id>
    <published>2018-05-02T06:24:22.000Z</published>
    <updated>2018-05-02T06:24:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql-5-6版本"><a href="#mysql-5-6版本" class="headerlink" title="mysql 5.6版本"></a>mysql 5.6版本</h2><p>mysql 5.6版本中，安装完毕之后不会设置初始密码，服务启动之后，直接输入mysql即可进入数据库</p><p><strong>安装之后的第一次密码设置</strong></p><pre><code># mysql  在终端直接输入mysql进入数据库mysql&gt; set password = password(&apos;Mysql_password123&apos;);mysql&gt; flush privileges;</code></pre><p><strong>修改密码</strong></p><p><strong>忘记密码之后的恢复</strong></p>]]></content>
    
    <summary type="html">
    
      Mysql密码设置修改及恢复
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="数据库" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
      <category term="Mysql密码" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/Mysql%E5%AF%86%E7%A0%81/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux下JDK的安装配置</title>
    <link href="http://yoursite.com/2018/04/28/Linux%E4%B8%8BJDK%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/04/28/Linux下JDK的安装配置/</id>
    <published>2018-04-28T03:28:39.000Z</published>
    <updated>2018-04-28T03:28:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Linux中JDK的配置主要分为以下几个步骤：</p><ul><li><p>下载</p></li><li><p>解压</p></li><li><p>软链接</p></li><li><p>配置系统/用户环境变量</p></li></ul><h2 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h2><p>官方下载链接：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">下载</a></p><p>JAVA环境的配置主要分为两种，一种是由root用户操作，针对所有用户全局生效的配置，一种是由具体普通用户操作，仅针对该用户生效的配置</p><p>因此，以下的配置根据实际需求。</p><h2 id="全局生效-管理员权限操作"><a href="#全局生效-管理员权限操作" class="headerlink" title="全局生效-管理员权限操作"></a>全局生效-管理员权限操作</h2><p><strong>解压+软链接</strong></p><pre><code># tar -zxvf jdk-7u75-linux-x64.tar.gz -C /usr/local/# cd /usr/local/# ln -s /usr/local/jdk1.7.0_75/  /usr/local/JDK        </code></pre><p>创建软链接目的：灵活的版本升级切换</p><p><strong>配置系统环境变量：</strong></p><pre><code># vim /etc/profile  在文件末尾添加以下内容export JAVA_HOME=/usr/local/JDKexport JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin::$CLASSPATH:$PATH# source /etc/profile</code></pre><h2 id="用户局部生效-用户环境变量"><a href="#用户局部生效-用户环境变量" class="headerlink" title="用户局部生效-用户环境变量**"></a>用户局部生效-用户环境变量**</h2><p>注意提示符的变化，这里以appdev用户为例</p><p><strong>解压+软链接</strong></p><pre><code>$ tar -zxvf jdk-7u75-linux-x64.tar.gz$ ln -s /home/appdev/jdk1.7.0_75/  /home/appdev/JDK        </code></pre><p>创建软链接目的：灵活的版本升级切换</p><p><strong>配置系统环境变量：</strong></p><pre><code>$ vim .bash_profile  在文件末尾添加以下内容export JAVA_HOME=/home/appdev/JDKexport JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/libexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin::$CLASSPATH:$PATH$ source .bash_profile</code></pre>]]></content>
    
    <summary type="html">
    
      基础环境配置之JDK
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="基础环境配置" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="JDK" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/JDK/"/>
    
    
      <category term="JDK" scheme="http://yoursite.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>Cachecloud-Redis云平台</title>
    <link href="http://yoursite.com/2018/04/28/Cachecloud/"/>
    <id>http://yoursite.com/2018/04/28/Cachecloud/</id>
    <published>2018-04-28T02:45:56.000Z</published>
    <updated>2018-04-28T02:45:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cachecloud介绍"><a href="#Cachecloud介绍" class="headerlink" title="Cachecloud介绍"></a>Cachecloud介绍</h1><p>有关cachecloud的一些基础知识，官方都有非常详细的文档，这里不再花费篇幅进行复述，下面是相关的资料链接，请自行查看。</p><ul><li>github官网：    <a href="https://github.com/sohutv/cachecloud" target="_blank" rel="noopener">https://github.com/sohutv/cachecloud</a></li><li>Wiki:            <a href="https://github.com/sohutv/cachecloud/wiki" target="_blank" rel="noopener">https://github.com/sohutv/cachecloud/wiki</a></li><li>博客：        <a href="https://cachecloud.github.io/" target="_blank" rel="noopener">https://cachecloud.github.io/</a></li><li>官方视频：  <a href="http://my.tv.sohu.com/pl/9100280/index.shtml" target="_blank" rel="noopener">http://my.tv.sohu.com/pl/9100280/index.shtml</a></li></ul><p><strong>简介：</strong></p><blockquote><p>CacheCloud提供一个Redis云管理平台：实现多种类型(Redis Standalone、Redis Sentinel、Redis Cluster)自动部署、解决Redis实例碎片化现象、提供完善统计、监控、运维功能、减少开发人员的运维成本和误操作，提高机器的利用率，提供灵活的伸缩性，提供方便的接入客户端。</p></blockquote><p><strong>提供的功能：</strong></p><ul><li>监控统计：    提供了机器、应用、实例下各个维度数据的监控和统计界面。</li><li>一键开启：    Redis Standalone、Redis Sentinel、Redis Cluster三种类型的应用，无需手动配置初始化。</li><li>Failover：    支持哨兵,集群的高可用模式。</li><li>伸缩：    提供完善的垂直和水平在线伸缩功能。</li><li>完善运维： 提供自动运维和简化运维操作功能，避免纯手工运维出错。</li><li>方便的客户端 方便快捷的客户端接入。</li><li>元数据管理： 提供机器、应用、实例、用户信息管理。</li><li>流程化： 提供申请，运维，伸缩，修改等完善的处理流程</li><li>一键导入： 一键导入已经存在Redis </li></ul><p><strong>须知：</strong></p><ul><li>Redis集群、redis哨兵集群、Redis单实例等在CacheCloud中都是以应用的形式存在，一个应用对应一个appid</li><li>一个redis集群是一个应用，分配一个appid（不管其中有几个节点）</li><li>一个哨兵集群是一个应用，分配一个appid（不管其中有几个主从节点和哨兵节点）</li><li>一个单实例是一个应用，分配一个appid</li></ul><p><strong>如何使用：</strong></p><p>我们在平台上的执行任何操作都需要<code>**账号**</code>，创建的单节点、哨兵、集群等都是以<strong><code>用户申请的应用</code></strong>形式存在的。普通用户的主要工单有</p><ul><li>注册用户申请</li><li>应用申请</li><li>应用扩容</li><li>应用配置修改</li></ul><p>管理员的界面可操作的选项较多，此处不做详细说明。</p><p><strong>客户端如何连接：</strong></p><p>客户端在第一次启动的时候去CacheCloud通过appId拿到Redis的节点信息，之后不会与CacheCloud打交道了。</p><p>流程图如下所示：</p><p><img src="http://picture.watchmen.xin/cachecloud/client.png" alt="客户端连接"></p><h1 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h1><p>这里只说单机环境，高可用环境将在下面章节说明：<a href="">CacheCloud高可用架构</a></p><p><strong>环境要求：</strong></p><ul><li>JDK 7+</li><li>Maven 3+</li><li>MySQL 5.5+</li><li>Redis 3+</li></ul><h2 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h2><h3 id="JDK-Maven"><a href="#JDK-Maven" class="headerlink" title="JDK+Maven"></a>JDK+Maven</h3><p><strong>JDK：</strong></p><p>步骤：</p><ul><li>下载</li><li>解压</li><li>软链接</li><li>配置系统环境变量</li></ul><p>操作如下：</p><pre><code>[root@qa1-common004 local]# java -version java version &quot;1.8.0_77&quot;Java(TM) SE Runtime Environment (build 1.8.0_77-b03)Java HotSpot(TM) 64-Bit Server VM (build 25.77-b03, mixed mode)[root@qa1-common004 local]# which java/usr/local/jdk/bin/java[root@qa1-common004 local]# ll /usr/local/jdklrwxrwxrwx 1 root root 11 Apr 17 17:01 /usr/local/jdk -&gt; jdk1.8.0_77</code></pre><p>这里我使用的是1.8版本。</p><p>详细操作请看文章：<a href="">Linux下JDK的安装配置</a></p><p><strong>Maven</strong></p><p>步骤：</p><ul><li>下载  <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">下载链接</a></li><li>解压</li><li>软链接</li><li>配置系统环境变量</li></ul><p>操作如下：</p><pre><code># wget http://www-eu.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz# tar -zxvf apache-maven-3.5.3-bin.tar.gz -C /usr/local/# cd /usr/local/# ln -s /usr/local/apache-maven-3.5.3/ /usr/local/maven# vim /etc/profile  在文件末尾添加以下内容，保存退出M3_HOME=/usr/local/mavenexport PATH=$M3_HOME/bin:$PATH[root@host-192-168-8-37 ~]# source /etc/profile</code></pre><h3 id="下载CacheCloud项目"><a href="#下载CacheCloud项目" class="headerlink" title="下载CacheCloud项目"></a>下载CacheCloud项目</h3><pre><code># yum -y install git# git clone https://github.com/sohutv/cachecloud.git# ls cachecloud/cachecloud-open-client  cachecloud-open-common  cachecloud-open-web  LICENSE  pom.xml  README.md  script</code></pre><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><p>这里安装mysql5.7版本</p><p><strong>配置yum源并安装</strong></p><p>centos6.8 【6.8安装5.6版本，安装5.7时涉及依赖关系过多】</p><pre><code># wget http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm# rpm -ivh mysql-community-release-el6-5.noarch.rpm# yum -y install  mysql-community-server</code></pre><p>centos 7.x 【5.7版本】</p><pre><code># wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm# rpm -ivh mysql57-community-release-el7-11.noarch.rpm# yum -y install mysql-server</code></pre><p><strong>修改mysql配置文件</strong></p><pre><code># vim /etc/my.cnf[mysqld]character-set-server=utf8 </code></pre><p><strong>启动</strong></p><pre><code># /etc/init.d/mysqld start</code></pre><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><p><strong>创建数据库</strong></p><pre><code>mysql&gt; create database cache_cloud default charset utf8;Query OK, 1 row affected (0.00 sec)</code></pre><p><strong>创建cachecloud用户</strong></p><pre><code>mysql&gt; grant all privileges on cache_cloud.* to &apos;cachecloud&apos;@&apos;%&apos; identified by &apos;Cache_cloud123&apos;;Query OK, 0 rows affected (0.00 sec)</code></pre><p><strong>导入初始化数据</strong><br>注意，这里已经不是在数据库中了</p><pre><code>[root@qa1-common004 script]# pwd/root/software/cachecloud/script[root@qa1-common004 script]# mysql -u root -p cache_cloud &lt; cachecloud.sql Enter password: </code></pre><h2 id="修改cachecloud配置"><a href="#修改cachecloud配置" class="headerlink" title="修改cachecloud配置"></a>修改cachecloud配置</h2><p><strong>数据库设置</strong></p><pre><code>[root@qa1-common004 swap]# pwd/root/software/cachecloud/cachecloud-open-web/src/main/swap[root@qa1-common004 swap]# cat online.properties cachecloud.db.url = jdbc:mysql://172.24.64.132:3306/cache_cloud?useUnicode=true&amp;amp;characterEncoding=UTF-8cachecloud.db.user = cachecloudcachecloud.db.password = Cache_cloud123 cachecloud.maxPoolSize = 20isClustered = trueisDebug = falsespring-file=classpath:spring/spring-online.xmllog_base=/opt/cachecloud-web/logsweb.port=8585log.level=WARN</code></pre><p>注意这里需要提前在数据库中删除匿名用户</p><p><strong>开启机器监控功能</strong></p><pre><code># pwd/root/software/cachecloud/cachecloud-open-web/src/main/java/com/sohu/cache/schedule/jobs# vim ServerJob.java    将稳中的注释去掉，修改之后的文件如下所示：</code></pre><p><img src="http://picture.watchmen.xin/cachecloud/machine.png" alt=""></p><p>如果公司已经有完善的监控，那么不建议开启机器监控，能够一定程度上减小数据库的压力。</p><h2 id="cachecloud构建及启动"><a href="#cachecloud构建及启动" class="headerlink" title="cachecloud构建及启动"></a>cachecloud构建及启动</h2><p><strong>项目构建</strong></p><p>在cachecloud的根目录下执行以下maven命令，该命令会进行项目的构建</p><pre><code>[root@qa1-common004 cachecloud]# pwd/root/software/cachecloud[root@qa1-common004 cachecloud]#[root@host-192-168-8-37 cachecloud]# mvn clean compile install -Ponline[root@host-192-168-8-37 cachecloud]# cd script/ [root@host-192-168-8-37 script]# sh deploy.sh /root/software/</code></pre><p><strong>启动</strong></p><pre><code># sh /opt/cachecloud-web/start.sh</code></pre><p>启动成功之后的web页面如下图所示：</p><p><img src="http://picture.watchmen.xin/cachecloud/web.png" alt="web"></p><h1 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h1><h2 id="redis数据节点初始化"><a href="#redis数据节点初始化" class="headerlink" title="redis数据节点初始化"></a>redis数据节点初始化</h2><p>执行初始化脚本</p><pre><code>sh cachecloud-init.sh cachecloud</code></pre><h2 id="添加主机"><a href="#添加主机" class="headerlink" title="添加主机"></a>添加主机</h2><h2 id="redis应用模板配置"><a href="#redis应用模板配置" class="headerlink" title="redis应用模板配置"></a>redis应用模板配置</h2><p><strong>注意：</strong>在部署redis相关应用之前，一定要先进行模板的配置，因为默认配置下，redis的守护进程模式为关系，保护模式也是开启的</p><p><strong>修改配置：</strong></p><ul><li>配置名称：daemonize；配置值：yes;配置说明：是否守护进程</li></ul><p><strong>新增配置：</strong></p><ul><li><p>配置名称：protected-mode；配置值：no;配置说明：保护模式</p></li><li><p>配置名称：bind；配置值：0.0.0.0;配置说明：绑定ip</p></li></ul><font color="red"> 注意：哨兵的配置模板中只需要新增protected-mode参数即可。</font><h2 id="部署哨兵应用"><a href="#部署哨兵应用" class="headerlink" title="部署哨兵应用"></a>部署哨兵应用</h2><h2 id="导入已经存在的redis实例"><a href="#导入已经存在的redis实例" class="headerlink" title="导入已经存在的redis实例"></a>导入已经存在的redis实例</h2><h3 id="redis哨兵"><a href="#redis哨兵" class="headerlink" title="redis哨兵"></a>redis哨兵</h3><h1 id="cachecloud使用优化"><a href="#cachecloud使用优化" class="headerlink" title="cachecloud使用优化"></a>cachecloud使用优化</h1><p><strong>哨兵复用问题：</strong></p><p>使用cachecloud部署哨兵集群时，每次生成的哨兵节点都是不一样的，这种情况，会造成一定的资源浪费（每一对主从都需要至少3个哨兵节点，对服务器的端口资源、内存资源等都会造成一定的浪费）</p><p>因此，我们采取复用哨兵节点的方式来实现redis的主从高可用</p><p>实现步骤：</p><ul><li><ol><li>哨兵模板中设置端口，将端口固定，为了后续的配置方便</li></ol></li><li><ol><li>手动创建主从节点</li></ol></li><li><ol><li>哨兵中添加新建的主从节点</li></ol></li><li><ol><li>在cachecloud平台上导入这个应用</li></ol></li></ul><p>相当于其实是导入redis哨兵的方式</p><p>哨兵配置：</p><pre><code>redis-cli -p 6388 sentinel monitor master-test-qa1 172.24.64.134 6385 2&amp;&amp;redis-cli -p 6388 SENTINEL set master-test-qa1 auth-pass redis123&amp;&amp;redis-cli -p 6388 sentinel set master-test-qa1 down-after-milliseconds 20000&amp;&amp;redis-cli -p 6388 sentinel set master-test-qa1 failover-timeout 60000</code></pre><p><strong>关闭master节点的持久化</strong></p><p>AOF持久化：appendonly  配置为no</p><h1 id="cachecloud坑-CacheCloud安装部署及使用常见问题及注意事项"><a href="#cachecloud坑-CacheCloud安装部署及使用常见问题及注意事项" class="headerlink" title="cachecloud坑- CacheCloud安装部署及使用常见问题及注意事项"></a>cachecloud坑- CacheCloud安装部署及使用常见问题及注意事项</h1><ul><li><p><strong>数据库版本问题：</strong> 如果使用mysql5.7，则需要进行针对sql文件做一些设置（only_full_group_by模式设置等）</p></li><li><p><strong>cachecloud平台乱码问题：</strong> 需要修改online.properties配置文件中的连接串（使用这种方式：jdbc:mysql://127.0.0.1:3306/cache_cloud?useUnicode=true&amp;characterEncoding=UTF-8）</p></li><li><p><strong>cachecloud后台配置模板：</strong>默认配置下，redis没有开启守护进程运行方式、开启了保护模式等，需要做一些配置修改之后才可以正常启动</p></li><li><p><strong>机器监控数据无法展示问题：</strong>除了在程序文件中去掉相应的代码注释，还需要将cachecloud-open-web/nmon下指定系统版本的nmon文件放到/opt/cachecloud/soft/目录下</p></li><li><p><strong>密码配置问题：</strong>密码配置栏中，输入密码之后，还需要点击更新才可以生效</p></li><li><p><strong>Jedis支持redis版本问题：</strong>Jedis暂时无法稳定支持redis4.x版本，因此涉及到的集群水平扩容等功能是无法实现的（集群创建等还是可以支持的），因此我们建议使用3版本，后续关注Jedis的版本发布情况。</p></li><li><p><strong>应用导入时提示：节点不是存活的</strong> cachecloud节点上需要安装redis，因为他会使用redis-cli 去ping指定的节点，没有返回pong时，则会报错</p></li><li><p><strong>哨兵导入问题：</strong> 如果哨兵是复用的，也就是说一组哨兵节点监听了多对主从节点，那么在导入的时候回出现问题，目前导入功能只支持一个mastername</p></li><li><p><strong>主机名设置问题：</strong>  注意hosts文件需要进行配置</p></li></ul>]]></content>
    
    <summary type="html">
    
      本文主要讲述由搜狐视频开源在github上的Redis云平台产品-Cachecloud的安装部署、使用、优化等相关知识。
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="数据库" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/"/>
    
    
      <category term="cachecloud" scheme="http://yoursite.com/tags/cachecloud/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile编写</title>
    <link href="http://yoursite.com/2018/04/28/Dockerfile%E7%BC%96%E5%86%99/"/>
    <id>http://yoursite.com/2018/04/28/Dockerfile编写/</id>
    <published>2018-04-28T02:42:14.000Z</published>
    <updated>2018-04-28T02:42:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>在docker中，创建镜像的方法主要有三种：</p><ul><li>基于已有镜像的容器创建</li><li>基于本地模板导入</li><li>基于dockerfile创建</li></ul><p>dockerfile是一个文本格式的配置文件，用户可以使用dockerfile来快速创建自定义镜像。</p>]]></content>
    
    <summary type="html">
    
      本章节主要讲述dockerfile相关知识
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="虚拟化" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E8%99%9A%E6%8B%9F%E5%8C%96/Docker/"/>
    
    
      <category term="dockerfile" scheme="http://yoursite.com/tags/dockerfile/"/>
    
  </entry>
  
  <entry>
    <title>Docker基础知识</title>
    <link href="http://yoursite.com/2018/04/28/Docker%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/04/28/Docker基础知识/</id>
    <published>2018-04-28T02:40:40.000Z</published>
    <updated>2018-04-28T02:40:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1>]]></content>
    
    <summary type="html">
    
      Docker基础知识
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="虚拟化" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E8%99%9A%E6%8B%9F%E5%8C%96/Docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack</title>
    <link href="http://yoursite.com/2018/04/28/SaltStack/"/>
    <id>http://yoursite.com/2018/04/28/SaltStack/</id>
    <published>2018-04-28T02:10:02.000Z</published>
    <updated>2018-04-28T02:10:02.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Ansible</title>
    <link href="http://yoursite.com/2018/04/28/Ansible/"/>
    <id>http://yoursite.com/2018/04/28/Ansible/</id>
    <published>2018-04-28T02:09:30.000Z</published>
    <updated>2018-04-28T02:09:30.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="ansible" scheme="http://yoursite.com/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo</title>
    <link href="http://yoursite.com/2018/04/26/Dubbo/"/>
    <id>http://yoursite.com/2018/04/26/Dubbo/</id>
    <published>2018-04-26T03:49:32.000Z</published>
    <updated>2018-04-26T03:49:32.000Z</updated>
    
    <summary type="html">
    
      dubbo
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="分布式" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="Dubbo" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/Dubbo/"/>
    
    
      <category term="dubbo" scheme="http://yoursite.com/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>RPC框架</title>
    <link href="http://yoursite.com/2018/04/26/RPC%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2018/04/26/RPC框架/</id>
    <published>2018-04-26T03:48:01.000Z</published>
    <updated>2018-04-26T03:48:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考文献：</p><ul><li><a href="https://www.zhihu.com/question/25536695" target="_blank" rel="noopener">知乎</a></li></ul><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>远程过程调用（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作远程调用或远程方法调用，例：Java RMI。</p><p>RPC就是要像调用本地的函数一样去调远程函数。</p><p><strong>传统的本地调用方式：</strong></p><ul><li>代码文件中定义和调用</li><li>或者import的方式导入模块之后再进行调用</li></ul><p>而远程调用，指的是，我们要调用执行的函数是在远程的机器上的，</p>]]></content>
    
    <summary type="html">
    
      RPC相关知识
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="分布式" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="RPC" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/RPC/"/>
    
    
      <category term="RPC" scheme="http://yoursite.com/tags/RPC/"/>
    
  </entry>
  
  <entry>
    <title>HTML</title>
    <link href="http://yoursite.com/2018/04/25/HTML/"/>
    <id>http://yoursite.com/2018/04/25/HTML/</id>
    <published>2018-04-25T15:45:50.000Z</published>
    <updated>2018-04-25T15:45:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><h3 id="段落标识"><a href="#段落标识" class="headerlink" title="段落标识"></a>段落标识</h3><pre><code>标签&lt;p&gt;&lt;/p&gt;标识一整个段落；其中标签&lt;p&gt;指出了段落的开头位置，而标签&lt;/p&gt;指出了段落的结束位置。</code></pre><p><strong>代码为：</strong></p><pre><code>&lt;p&gt;&lt;/p&gt;标识段落；标签&lt;p&gt;指出了段落的开头位置，而标签&lt;/p&gt;指出了段落的结束位置。</code></pre><p><strong>效果：</strong></p><p></p>标识段落；标签<br><p>指出了段落的开头位置，而标签</p>指出了段落的结束位置。<br><br><br>### 颜色标识 ###<br><br><br><strong>代码为：</strong><br><br>    <font color="red">内容</font><br><br><strong>效果：</strong><br><br><font color="red">内容</font><br><br>### 链接 ###<br><br><br><strong>在HTML页面中，链接是使用锚（mao）标签来定义了：</strong><br><br>    格式为： <a href="link_url">link text </a><br><br>这里也就是类似markdown的链接使用方式，也可以说是类似Linux中软链接的方式，可以隐藏后端真实的URL串，并且让对外的链接保持最新也要容易得多。<br><br>实际案例：<br><br>    <p><br>      <a href="{ % url 'learning_logs:index' % }">Learning Log</a><br>    </p>]]></content>
    
    <summary type="html">
    
      HTML相关知识记录
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="HTML" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/HTML/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>disconf</title>
    <link href="http://yoursite.com/2018/04/25/disconf/"/>
    <id>http://yoursite.com/2018/04/25/disconf/</id>
    <published>2018-04-25T08:15:14.000Z</published>
    <updated>2018-04-25T08:15:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>官方资料：</p><p><a href="https://github.com/knightliao/disconf" target="_blank" rel="noopener">github主页</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>disconf专注于各种「分布式系统配置管理」的「通用组件」和「通用平台」, 提供统一的「配置管理服务」</p><p>工作流程如下图所示：</p><p><img src="http://picture.watchmen.xin/disconf/disconf.jpg" alt="disconf"></p><p><strong>实现目标：</strong></p><ul><li>部署极其简单：同一个上线包，无须改动配置，即可在 多个环境中(RD/QA/PRODUCTION) 上线 【每个应用中只需要配置相关的参数即可。】</li></ul><ul><li>部署动态化：更改配置，无需重新打包或重启，即可 实时生效</li></ul><ul><li>统一管理：提供web平台，统一管理 多个环境(RD/QA/PRODUCTION)、多个产品 的所有配置</li></ul><ul><li>核心目标：一个jar包，到处运行</li></ul><h1 id="部署及使用"><a href="#部署及使用" class="headerlink" title="部署及使用"></a>部署及使用</h1>]]></content>
    
    <summary type="html">
    
      Distributed Configuration Management Platform(分布式配置管理平台)
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="分布式" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="disconf" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E5%88%86%E5%B8%83%E5%BC%8F/disconf/"/>
    
    
      <category term="disconf" scheme="http://yoursite.com/tags/disconf/"/>
    
  </entry>
  
  <entry>
    <title>python零碎知识及版本变化记录</title>
    <link href="http://yoursite.com/2018/04/23/python%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E5%8F%8A%E7%89%88%E6%9C%AC%E5%8F%98%E5%8C%96%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/04/23/python零碎知识及版本变化记录/</id>
    <published>2018-04-23T11:34:40.000Z</published>
    <updated>2018-04-23T11:34:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零碎知识"><a href="#零碎知识" class="headerlink" title="零碎知识"></a>零碎知识</h1><ul><li>CharField类型必须添加max_length来指定长度上限，如果要想没有限制，则考虑使用TextField类型</li></ul><h1 id="版本变化"><a href="#版本变化" class="headerlink" title="版本变化"></a>版本变化</h1><p>##django##</p><p><strong>外键：</strong></p><p>Django2.0版本之后，创建外键时需要在后面加上on_delete</p><pre><code>topic = models.ForeignKey(Topic) </code></pre><p>应该修改为：</p><pre><code>topic = models.ForeignKey(Topic,on_delete=models.CASCADE)</code></pre>]]></content>
    
    <summary type="html">
    
      python零碎知识及版本变化记录
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Python" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/"/>
    
    
      <category term="python版本" scheme="http://yoursite.com/tags/python%E7%89%88%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title> ignoring option PermSize=512m; support was removed in 8.0 </title>
    <link href="http://yoursite.com/2018/04/23/ignoring-option-PermSize-512m-support-was-removed-in-8-0/"/>
    <id>http://yoursite.com/2018/04/23/ignoring-option-PermSize-512m-support-was-removed-in-8-0/</id>
    <published>2018-04-23T03:47:55.000Z</published>
    <updated>2018-04-23T03:47:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用jdk1.8的时候设置了vm参数：-Xmx2048m -XX:PermSize=512m -XX:MaxPermSize=768m -Xss2m<br>此时运行java程序时VM提示如下警告：</p><pre><code>Java HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=512m; support was removed in 8.0 Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=768m; support was removed in 8.0</code></pre><p>程序能正常兼容启动，不会产生影响，但这个提示还是引起了注意</p><p><strong>问题原因：</strong></p><p>-XX:PermSize和-XX:MaxPermSize在jdk1.8中被弃用了，使用-XX:MetaspaceSize和-XX:MaxMetaspaceSize替代。 </p><p>所以此时VM参数正确应为：-Xmx2048m -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=768m -Xss2m</p><p><strong>根本原因：</strong></p><p>在jdk1.8之前之前我们将储存类信息、常量、静态变量的方法区称为持久代(Permanent Generation)，PermSize和MaxPermSize是设置持久代大小的参数。</p><p>但是<strong><code>在jdk1.8中，持久代被完全移除了</code></strong>，所以这两个参数也被移除了，多了一个元数据区(Metadata Space)，所以设置元数据区大小的参数也变成对应的MetaspaceSize和MaxMetaspaceSize了。</p>]]></content>
    
    <summary type="html">
    
      JDK1.8环境后废弃了持久代
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="运维工作日常问题" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E8%BF%90%E7%BB%B4%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="持久代被废弃" scheme="http://yoursite.com/tags/%E6%8C%81%E4%B9%85%E4%BB%A3%E8%A2%AB%E5%BA%9F%E5%BC%83/"/>
    
  </entry>
  
</feed>
