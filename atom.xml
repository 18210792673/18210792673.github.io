<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Watchmen1992&#39;s Blog</title>
  
  <subtitle>锦瑟年华当与书香为度，是为不负天地人生。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-27T13:54:39.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XiaoHua WANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>模块初始及列表字典等深入</title>
    <link href="http://yoursite.com/2018/06/27/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E8%80%81%E7%94%B7%E5%AD%A9%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/day02/%E6%A8%A1%E5%9D%97%E5%88%9D%E5%A7%8B/"/>
    <id>http://yoursite.com/2018/06/27/编程语言/Python/老男孩视频学习笔记/day02/模块初始/</id>
    <published>2018-06-27T13:54:39.000Z</published>
    <updated>2018-06-27T13:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模块简介"><a href="#模块简介" class="headerlink" title="模块简介"></a>模块简介</h1><p>模块的简单介绍：用户写好了一堆功能，将其封装在一个文件当中，从网上下载下来之后，导入之后就可以使用，不用再去重新编写相对应的功能代码。这个文件就叫做模块，又可以叫做库</p><p>模块（库）主要分为两种：</p><ul><li>一个是标准库（不需要额外安装下载，就可以直接导入的库，比如说getpass,os,sys模块等）</li><li>一个是第三方库（必须要额外的下载安装之后，才可以使用，例如django）</li></ul><p>几个要点：</p><ul><li>模块在系统中是以.py结尾的文件方式存在的</li><li>这些模块文件在python有一个寻找路径/环境变量（存储路径可以通过sys模块的path方法进行查看，默认情况下，会最优先从当前目录下进行寻找）【这个是python的全局变量，和系统的path环境变量不一样】，这个python全局变量，存储的是路径信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;python</span><br><span class="line">Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 16:07:46) [MSC v.1900 32 bit (Intel)] on win32</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; import sys</span><br><span class="line">&gt;&gt;&gt; print (sys.path)</span><br><span class="line">[&apos;&apos;, &apos;D:\\software\\python\\python36.zip&apos;, &apos;D:\\software\\python\\DLLs&apos;, &apos;D:\\software\\python\\lib&apos;, &apos;D:\\software\\python&apos;, &apos;D:\\software\\python\\lib\\site-packages&apos;]</span><br></pre></td></tr></table></figure><p>一般情况下，python安装的第三方库都是存放在lib\site-packages路径下</p><h2 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">print (sys.path)</span><br><span class="line">print(sys.argv)</span><br></pre></td></tr></table></figure><p>输出信息如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&apos;C:\Users\Administrator\PycharmProjects\python14\day02&apos;, &apos;C:\Users\Administrator\PycharmProjects\python14&apos;, &apos;D:\software\python\python36.zip&apos;, &apos;D:\software\python\DLLs&apos;, &apos;D:\software\python\lib&apos;, &apos;D:\software\python&apos;, &apos;D:\software\python\lib\site-packages&apos;]</span><br><span class="line"></span><br><span class="line">[&apos;C:/Users/Administrator/PycharmProjects/python14/day02/moudles.py&apos;]</span><br></pre></td></tr></table></figure><ul><li>path方法输出python定义的环境变量信息</li><li>argv方法输出当前文件所在相对路径信息（注意是相对路径，这里输出是因为在IDE中调用的时候写的脚本名字的路径就是绝对路径，pycharm在调用的时候写的是绝对路径）</li></ul><h2 id="OS模块"><a href="#OS模块" class="headerlink" title="OS模块"></a>OS模块</h2><p>OS模块是跟操作系统进行交互</p><p>从python中调用shell的命令，或者在系统上创建一个文件、目录等</p><p>比如</p><p>执行命令，使用方法：os.system()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import os</span><br><span class="line">cmd_res = os.system(&quot;df -h&quot;)</span><br><span class="line">print (cmd_res)</span><br></pre></td></tr></table></figure><p>执行后的输出为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@redis001 ~]# python test.py</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2       197G  1.4G  186G   1% /</span><br><span class="line">tmpfs            63G   24K   63G   1% /dev/shm</span><br><span class="line">/dev/sda1       283M   37M  232M  14% /boot</span><br><span class="line">/dev/sda6       1.3T  203M  1.3T   1% /data1</span><br><span class="line">/dev/sda3        99G   60M   94G   1% /home</span><br><span class="line">/dev/sda5        50G   52M   47G   1% /tmp</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>注意：在使用os.system执行命令的时候，这个结果的输出是直接输出到屏幕上的，而不是存到这个变量中，所以输出之后就没有了</p><p>0 是命令执行成功与否的返回状态码</p><p>上面的system是执行命令，但是不保存结果</p><p>那么，我们就想保存结果的时候，该做什么操作？ 这个时候我们使用popen方法</p><p>popen()方法输出的是一个内存的对象地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@redis001 ~]# cat test.py </span><br><span class="line">#!/usr/bin/python</span><br><span class="line">import os</span><br><span class="line">cmd_res = os.popen(&quot;ls&quot;)</span><br><span class="line">print (cmd_res)</span><br><span class="line">[root@redis001 ~]# python test.py</span><br><span class="line">&lt;open file &apos;ls&apos;, mode &apos;r&apos; at 0x7ff2cce43c00&gt;</span><br><span class="line">ls: write error: Broken pipe</span><br></pre></td></tr></table></figure><p>那么，想要真正的结果，则需要再调用一下read()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@redis001 ~]# cat test.py </span><br><span class="line">#!/usr/bin/python</span><br><span class="line">import os</span><br><span class="line">cmd_res = os.popen(&quot;ls&quot;).read()</span><br><span class="line">print (cmd_res)</span><br><span class="line">[root@redis001 ~]# python test.py</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">install.log</span><br><span class="line">install.log.syslog</span><br><span class="line">test.py</span><br></pre></td></tr></table></figure><p>解析：在执行完popen()之后，这个结果是保存在内存的一个临时的地方，这个地方，必须通过read()方法，再去取出来</p><h1 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h1><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表切片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">print (list[1:3])</span><br><span class="line">输出为：</span><br><span class="line">[&apos;wsy&apos;, &apos;dabadou&apos;]</span><br></pre></td></tr></table></figure><p>打印列表中item的数量-使用count方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">print(list.count(&quot;wxh&quot;))</span><br></pre></td></tr></table></figure><p>清除列表-clear方法-注意这里只是清空了但是不会被删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.clear()</span><br></pre></td></tr></table></figure><p>列表反转-reverse()方法</p><p>列表合并-extend()方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">list2 = [1,2,3,4]</span><br><span class="line">list.extend(list2)</span><br><span class="line">print (list)</span><br><span class="line">输出为：</span><br><span class="line">[&apos;wxh&apos;, &apos;wsy&apos;, &apos;dabadou&apos;, &apos;badou&apos;, &apos;wxh&apos;, 1, 2, 3, 4]</span><br></pre></td></tr></table></figure><p>列表删除-del命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list2 = [1,2,3,4]</span><br><span class="line">del list2</span><br><span class="line">print (list2)</span><br></pre></td></tr></table></figure><p>列表嵌套列表及子列表赋值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,[&quot;wxh&quot;,&quot;heheh&quot;,&quot;haha&quot;],&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">list[3][1] = &quot;WXH&quot;</span><br><span class="line">print(list)</span><br><span class="line">执行后输出为：</span><br><span class="line">[&apos;wxh&apos;, &apos;wsy&apos;, &apos;dabadou&apos;, [&apos;wxh&apos;, &apos;WXH&apos;, &apos;haha&apos;], &apos;badou&apos;, &apos;wxh&apos;]</span><br></pre></td></tr></table></figure><p>列表复制-使用copy模块的copy方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import copy</span><br><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,[&quot;wxh&quot;,&quot;heheh&quot;,&quot;haha&quot;],&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">list2 = copy.copy(list)</span><br><span class="line">print (list2)</span><br><span class="line">输出为：</span><br><span class="line">[&apos;wxh&apos;, &apos;wsy&apos;, &apos;dabadou&apos;, [&apos;wxh&apos;, &apos;heheh&apos;, &apos;haha&apos;], &apos;badou&apos;, &apos;wxh&apos;]</span><br><span class="line"></span><br><span class="line">也可以使用下面这种方式：</span><br><span class="line">list = [&quot;wxh&quot;,&quot;wsy&quot;,&quot;dabadou&quot;,[&quot;wxh&quot;,&quot;heheh&quot;,&quot;haha&quot;],&quot;badou&quot;,&quot;wxh&quot;]</span><br><span class="line">list2 = list[:]</span><br><span class="line">print (list2)</span><br></pre></td></tr></table></figure><p>使用这种列表再赋值的方式，可以拿来作为联合账号类功能，也就是说前者最开始的列表将会连带的影响所有的列表。</p><p>列表循环：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for i in list:</span><br><span class="line">print (i)</span><br></pre></td></tr></table></figure><p>在循环的时候-按照步长进行输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(list[0:-1:2])</span><br></pre></td></tr></table></figure><h2 id="元祖"><a href="#元祖" class="headerlink" title="元祖"></a>元祖</h2><p>元祖和列表差不多，只不过一旦创建之后就不能再次修改，因此又叫做只读列表</p><p>元祖使用()进行定义，而不是列表的[]</p><p>元祖只有两个方法，count和index方法</p><h2 id="购物车程序"><a href="#购物车程序" class="headerlink" title="购物车程序"></a>购物车程序</h2><p>需求如下：</p><ol><li>启动程序之后，让用户输入工资，然后打印商品列表</li><li>允许用户根据商品编号购买商品</li><li>用户选择商品后，检测余额是否足够，够久直接扣款，不够就提醒（不够的话可以选择便宜的，也就是说进入下一次循环）</li><li>可以随时退出，退出时，打印已经购买的商品和余额</li></ol><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># Author:XiaoHua Wang</span><br><span class="line">goods = [(&quot;iphone&quot;,7000),(&quot;Ipad pro&quot;,5000),(&quot;Mac pro&quot;,22000),(&quot;tea&quot;,40),(&quot;bag&quot;,2000),(&quot;Nike&quot;,860),(&quot;book&quot;,105)]</span><br><span class="line">salary = int(input(&quot;Please input your salary: &quot;))</span><br><span class="line">message2 = &quot;Please choice which number to buy,enter q to quit in any time:&quot;</span><br><span class="line">buy_goods = []</span><br><span class="line">while True:</span><br><span class="line">    print(&quot;These are all goods you can buy:&quot;)</span><br><span class="line">#    for i in range(len(goods)):</span><br><span class="line">#        print(str(i) + &quot; &quot; + str(goods[i]))</span><br><span class="line">    for item in goods:</span><br><span class="line">        print (goods.index(item),item)</span><br><span class="line">    Tag = input(message2)</span><br><span class="line">    jude = Tag.isdigit()</span><br><span class="line">    if Tag == &quot;q&quot;:</span><br><span class="line">        break</span><br><span class="line">    if jude != True:</span><br><span class="line">        print (&quot;sorry,input error,please enter number or q&quot;)</span><br><span class="line">        break</span><br><span class="line">    consume_moneny = int(goods[int(Tag)][1])</span><br><span class="line">    salary1 = salary</span><br><span class="line">    salary = salary - consume_moneny</span><br><span class="line">    if  salary &lt; 0:</span><br><span class="line">        print (&quot;sorry,you The amount is not enough,please select again&quot;)</span><br><span class="line">        print( &quot;rest salary is &#123;Salary&#125;&quot;.format(Salary=salary1) )</span><br><span class="line">        salary = salary1</span><br><span class="line">        continue</span><br><span class="line">#    if salary == 0:</span><br><span class="line">    if salary == 0:</span><br><span class="line">        print(&quot;Add &quot; + str(goods[int(Tag)]) )</span><br><span class="line">        print(&quot;consume all money just right,&quot;+ &quot;rest salary is 0 . you can&apos;t buy again.&quot;)</span><br><span class="line">        buy_goods = buy_goods.append(goods[int(Tag)][0])</span><br><span class="line">        break</span><br><span class="line">    print(&quot;Add &quot; + str(goods[int(Tag)]))</span><br><span class="line">#    print(&quot;rest salary is &quot; + str(salary))</span><br><span class="line">    print(&quot;rest salary is &#123;Salary&#125;&quot;.format(Salary=salary))</span><br><span class="line">    buy_goods.append(goods[int(Tag)][0])</span><br><span class="line">    continue</span><br><span class="line">print (&quot;you have buy blow goods: &quot;)</span><br><span class="line">print (buy_goods)</span><br></pre></td></tr></table></figure><p>注意：匹配列表的索引和对应的值还可以使用下面的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">goods = [(&quot;iphone&quot;,7000),(&quot;Ipad pro&quot;,5000),(&quot;Mac pro&quot;,22000),(&quot;tea&quot;,40),(&quot;bag&quot;,2000),(&quot;Nike&quot;,860),(&quot;book&quot;,105)]</span><br><span class="line">for item in goods:</span><br><span class="line">    print(goods.index(item), item)</span><br><span class="line">#或者</span><br><span class="line">for index,item in enumerate(goods):</span><br><span class="line">    print (index,item)</span><br><span class="line"></span><br><span class="line">执行后输出如下：</span><br><span class="line">0 (&apos;iphone&apos;, 7000)</span><br><span class="line">1 (&apos;Ipad pro&apos;, 5000)</span><br><span class="line">2 (&apos;Mac pro&apos;, 22000)</span><br><span class="line">3 (&apos;tea&apos;, 40)</span><br><span class="line">4 (&apos;bag&apos;, 2000)</span><br><span class="line">5 (&apos;Nike&apos;, 860)</span><br><span class="line">6 (&apos;book&apos;, 105)</span><br><span class="line">0 (&apos;iphone&apos;, 7000)</span><br><span class="line">1 (&apos;Ipad pro&apos;, 5000)</span><br><span class="line">2 (&apos;Mac pro&apos;, 22000)</span><br><span class="line">3 (&apos;tea&apos;, 40)</span><br><span class="line">4 (&apos;bag&apos;, 2000)</span><br><span class="line">5 (&apos;Nike&apos;, 860)</span><br><span class="line">6 (&apos;book&apos;, 105)</span><br></pre></td></tr></table></figure><h2 id="字符串常用操作"><a href="#字符串常用操作" class="headerlink" title="字符串常用操作"></a>字符串常用操作</h2><p><strong>字符串对应位置替换</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = &quot;wangxiaohua&quot;</span><br><span class="line">p = str.maketrans(&quot;abcdefg&quot;,&quot;1234567&quot;)</span><br><span class="line">print (name.translate(p))</span><br><span class="line"></span><br><span class="line">执行之后的输出如下所示：</span><br><span class="line">w1n7xi1ohu1</span><br></pre></td></tr></table></figure><p><strong>临时替换</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print (&quot;wangxiaohua&quot;.replace(&apos;a&apos;,&apos;A&apos;,2))</span><br><span class="line">执行后输出如下：</span><br><span class="line">wAngxiAohua</span><br><span class="line"></span><br><span class="line">格式为：旧字符，新字符，替换的格式个数</span><br></pre></td></tr></table></figure><p><strong>split分割-按照字符</strong></p><p>将字符串的值，按照指定的分隔符号，重新定义为列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num = &quot;1+2+3+4&quot;</span><br><span class="line">print (num.split(&quot;+&quot;))</span><br><span class="line">执行后输出如下：</span><br><span class="line">[&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;]</span><br></pre></td></tr></table></figure><p><strong>split分割-按照行</strong></p><p>split分割按照行来进行区分的时候，我们就需要使用splitlines()方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num = &quot;1+2+3\n+4+\n5+6&quot;</span><br><span class="line">print (num)</span><br><span class="line">print (num.split(&quot;+&quot;))</span><br><span class="line">print (num.splitlines())</span><br><span class="line"></span><br><span class="line">执行后输出如下所示：</span><br><span class="line">[&apos;1&apos;, &apos;2&apos;, &apos;3\n&apos;, &apos;4&apos;, &apos;\n5&apos;, &apos;6&apos;]</span><br><span class="line">[&apos;1+2+3&apos;, &apos;+4+&apos;, &apos;5+6&apos;]</span><br></pre></td></tr></table></figure><p>注意：在linux和windows平台上使用splitlines()方法的时候，它会自动的识别换行符（Linux和windows的换行符号是不一样的）</p><p><strong>Title格式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name = &quot;wang xiao hua&quot;</span><br><span class="line">name1 = &quot;wangxiaohua&quot;</span><br><span class="line">print (name.title())</span><br><span class="line">print (name1.title())</span><br><span class="line"></span><br><span class="line">执行后的输出如下所示：</span><br><span class="line">Wang Xiao Hua</span><br><span class="line">Wangxiaohua</span><br></pre></td></tr></table></figure><p>将输入的字符串输出为标题的格式，也就是首字母大写的格式</p><h2 id="字典操作"><a href="#字典操作" class="headerlink" title="字典操作"></a>字典操作</h2><p>字典的数据类型是一种key-value类型</p><p>字典的特性：</p><ul><li>dict是无序的</li><li>key必须是唯一的，因此字典天生就具备去重的功能</li><li>在输出的时候，默认是没有顺序的，因此可能写在最后的在最前面输出，因为字典没有下标信息，因为列表是通过索引下标进行查找，但是字典是通过key进行查找的</li><li>在取值的时候，用法和列表的相似，不过是在[]中将索引下标数字修改成为key值</li></ul><p>删除字典有几种方法，使用pop的时候，可以再进行赋值，使用del的时候就是真的删除了</p><p>字典的查找，可以使用get方法，也可以使用in的用法</p><p>字典中有该值则返回，没有的话则返回None</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = &#123;</span><br><span class="line">    &quot;name&quot;:&quot;wangxiaohua&quot;,</span><br><span class="line">    &quot;age&quot;:&quot;26&quot;,</span><br><span class="line">    &quot;sex&quot;:&quot;man&quot;</span><br><span class="line">&#125;</span><br><span class="line">print (info.get(&quot;name&quot;))</span><br><span class="line">print (info.get(&quot;named&quot;))</span><br><span class="line">if &quot;name&quot; in info:</span><br><span class="line">    print (&quot;Yes&quot;)</span><br><span class="line"></span><br><span class="line">执行后的输出如下所示：</span><br><span class="line">wangxiaohua</span><br><span class="line">None</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><p>字典的特殊赋值-如果能取到值则返回取到的值，如果值不存在则创建一个新的-setdefault()方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">info = &#123;</span><br><span class="line">    &quot;name&quot;:&quot;wangxiaohua&quot;,</span><br><span class="line">    &quot;age&quot;:&quot;26&quot;,</span><br><span class="line">    &quot;sex&quot;:&quot;man&quot;</span><br><span class="line">&#125;</span><br><span class="line">info.setdefault(&quot;name&quot;,&quot;hehe&quot;)</span><br><span class="line">print (info)</span><br><span class="line"></span><br><span class="line">执行后输出如下所示：</span><br><span class="line">&#123;&apos;name&apos;: &apos;wangxiaohua&apos;, &apos;age&apos;: &apos;26&apos;, &apos;sex&apos;: &apos;man&apos;&#125;</span><br></pre></td></tr></table></figure><p>字典的合并更新-存在交叉的key值进行覆盖，不存在的则进行插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">info = &#123;</span><br><span class="line">    &quot;name&quot;:&quot;wangxiaohua&quot;,</span><br><span class="line">    &quot;age&quot;:&quot;26&quot;,</span><br><span class="line">    &quot;sex&quot;:&quot;man&quot;</span><br><span class="line">&#125;</span><br><span class="line">info2 = &#123;</span><br><span class="line">    &quot;name&quot;:&quot;dabadou&quot;,</span><br><span class="line">    &quot;city&quot;:&quot;hangzhou&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">info.update(info2)</span><br><span class="line">print (info)</span><br><span class="line"></span><br><span class="line">执行后的输出如下所示：</span><br><span class="line">&#123;&apos;name&apos;: &apos;dabadou&apos;, &apos;age&apos;: &apos;26&apos;, &apos;sex&apos;: &apos;man&apos;, &apos;city&apos;: &apos;hangzhou&apos;&#125;</span><br></pre></td></tr></table></figure><p><strong>字典的循环</strong></p><p>字典的循环，一般使用的是items()方法，但是使用下面这种方法，会比items()方法高效很多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">info = &#123;</span><br><span class="line">    &quot;name&quot;:&quot;wangxiaohua&quot;,</span><br><span class="line">    &quot;age&quot;:&quot;26&quot;,</span><br><span class="line">    &quot;sex&quot;:&quot;man&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for i in info:</span><br><span class="line">  print (i,info[i])</span><br><span class="line"></span><br><span class="line">for k,v in info.items():</span><br><span class="line">    print (k,v)</span><br><span class="line">    </span><br><span class="line">执行后的输出如下所示：</span><br><span class="line"></span><br><span class="line">name wangxiaohua</span><br><span class="line">age 26</span><br><span class="line">sex man</span><br><span class="line">name wangxiaohua</span><br><span class="line">age 26</span><br><span class="line">sex man</span><br></pre></td></tr></table></figure><p>上面的方式，是通过索引的形式（这里是key）就直接把value取出来了，但是下面这个items()相当于是把字典变成一个列表，因此就多了一个字典转换成列表的过程，在数据量大的时候，效率非常的差</p><p>因此字典的循环，最好使用上面的这种方式，尽量避免使用items()方法来实现</p><h2 id="三级菜单程序"><a href="#三级菜单程序" class="headerlink" title="三级菜单程序"></a>三级菜单程序</h2><ul><li>三级菜单【省市县】【例如，浙江省–&gt;杭州市–&gt;xx县/区】</li><li>可依次选择进入各个子菜单</li><li>所需新知识点：列表，字典</li></ul><p>打开程序，列出中国所有的省，选择一个省，列出下面所有的城市，选中一个城市，再列出下面所有的县</p><p>在任何一个级别，可以返回上一级</p><p>在任何一个级别的时候，可以整个退出程序，输入例如quit等退出程序</p>]]></content>
    
    <summary type="html">
    
      模块初始
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Python" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/"/>
    
      <category term="老男孩视频学习笔记" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E8%80%81%E7%94%B7%E5%AD%A9%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="day02" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E8%80%81%E7%94%B7%E5%AD%A9%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/day02/"/>
    
      <category term="模块初识" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E8%80%81%E7%94%B7%E5%AD%A9%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/day02/%E6%A8%A1%E5%9D%97%E5%88%9D%E8%AF%86/"/>
    
    
      <category term="老男孩视频" scheme="http://yoursite.com/tags/%E8%80%81%E7%94%B7%E5%AD%A9%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器双网卡bond配置</title>
    <link href="http://yoursite.com/2018/06/26/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/2%E5%B1%82%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%8C%E7%BD%91%E5%8D%A1bond%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/06/26/IT科学技术知识体系结构-Linux运维方向/高并发/负载均衡/2层负载均衡/Linux服务器双网卡bond配置/</id>
    <published>2018-06-26T02:04:42.000Z</published>
    <updated>2018-06-26T02:04:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考文献：</strong></p><ul><li><a href="https://www.jianshu.com/p/e7df65f996f4" target="_blank" rel="noopener">linux 网卡绑定 bonding</a></li><li><a href="https://www.cnblogs.com/wuxulei/p/3270256.html" target="_blank" rel="noopener">Linux网卡绑定探析</a></li><li><a href="https://www.linuxidc.com/Linux/2017-06/144865.htm" target="_blank" rel="noopener">Linux下网卡bonding配置</a></li><li><a href="https://blog.csdn.net/werm520/article/details/43953421" target="_blank" rel="noopener">LINUX-网卡Bond</a></li><li><a href="http://blog.51cto.com/lixin15/1769338" target="_blank" rel="noopener">Linux双网卡绑定bond详解</a></li><li><a href="http://blog.51cto.com/linuxnote/1680315" target="_blank" rel="noopener">Linux网卡bond的七种模式详解</a></li></ul><h1 id="基础知识概述"><a href="#基础知识概述" class="headerlink" title="基础知识概述"></a>基础知识概述</h1><h2 id="什么是bond"><a href="#什么是bond" class="headerlink" title="什么是bond"></a>什么是bond</h2><p>网卡bond是通过多张网卡绑定为一个逻辑网卡，实现本地网卡的<strong><code>冗余，带宽扩容和负载均衡</code></strong>，在生产场景中是一种常用的技术。</p><p>通俗点讲就是两块网卡具有相同的IP地址而并行链接聚合成一个逻辑链路工作。</p><p>其实这项技术在Sun和Cisco中早已存在，被称为Trunking和Etherchannel 技术，在Linux的2.4.x的内核中开始采用这这种技术，被称为bonding。 </p><h2 id="内核支持"><a href="#内核支持" class="headerlink" title="内核支持"></a>内核支持</h2><p>在Linux Kernels 2.4.12及以后的版本均供bonding模块，以前的版本可以通过patch实现。可以通过以下命令确定内核是否支持 bonding： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx001 ~]# cat /boot/config-2.6.32-696.el6.x86_64 | grep -i bond</span><br><span class="line"># CONFIG_PATA_WINBOND is not set</span><br><span class="line">CONFIG_BONDING=m</span><br><span class="line">CONFIG_WINBOND_840=m</span><br><span class="line">CONFIG_INPUT_WINBOND_CIR=m</span><br><span class="line">CONFIG_IR_WINBOND_CIR=m</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">[root@nginx001 ~]# cat /boot/config-2.6.32-696.el6.x86_64 | grep -i bonding</span><br><span class="line">CONFIG_BONDING=m</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">[root@ network-scripts]# modinfo bonding</span><br><span class="line">filename:       /lib/modules/2.6.32-696.el6.x86_64/kernel/drivers/net/bonding/bonding.ko</span><br><span class="line">author:         Thomas Davis, tadavis@lbl.gov and many others</span><br><span class="line">description:    Ethernet Channel Bonding Driver, v3.7.1</span><br><span class="line">version:        3.7.1</span><br><span class="line">license:        GPL</span><br><span class="line">alias:          rtnl-link-bond</span><br><span class="line">srcversion:     454FF5806F146AD7FB41356</span><br><span class="line">depends:        </span><br><span class="line">vermagic:       2.6.32-696.el6.x86_64 SMP mod_unload modversions </span><br><span class="line">parm:           max_bonds:Max number of bonded devices (int)</span><br><span class="line">parm:           tx_queues:Max number of transmit queues (default = 16) (int)</span><br><span class="line">parm:           num_grat_arp:Number of peer notifications to send on failover event (alias of num_unsol_na) (int)</span><br><span class="line">parm:           num_unsol_na:Number of peer notifications to send on failover event (alias of num_grat_arp) (int)</span><br><span class="line">parm:           miimon:Link check interval in milliseconds (int)</span><br><span class="line">parm:           updelay:Delay before considering link up, in milliseconds (int)</span><br><span class="line">parm:           downdelay:Delay before considering link down, in milliseconds (int)</span><br><span class="line">parm:           use_carrier:Use netif_carrier_ok (vs MII ioctls) in miimon; 0 for off, 1 for on (default) (int)</span><br><span class="line">parm:           mode:Mode of operation; 0 for balance-rr, 1 for active-backup, 2 for balance-xor, 3 for broadcast, 4 for 802.3ad, 5 for balance-tlb, 6 for balance-alb (charp)</span><br><span class="line">parm:           primary:Primary network device to use (charp)</span><br><span class="line">parm:           primary_reselect:Reselect primary slave once it comes up; 0 for always (default), 1 for only if speed of primary is better, 2 for only on active slave failure (charp)</span><br><span class="line">parm:           lacp_rate:LACPDU tx rate to request from 802.3ad partner; 0 for slow, 1 for fast (charp)</span><br><span class="line">parm:           ad_select:803.ad aggregation selection logic; 0 for stable (default), 1 for bandwidth, 2 for count (charp)</span><br><span class="line">parm:           min_links:Minimum number of available links before turning on carrier (int)</span><br><span class="line">parm:           xmit_hash_policy:balance-xor and 802.3ad hashing method; 0 for layer 2 (default), 1 for layer 3+4, 2 for layer 2+3 (charp)</span><br><span class="line">parm:           arp_interval:arp interval in milliseconds (int)</span><br><span class="line">parm:           arp_ip_target:arp targets in n.n.n.n form (array of charp)</span><br><span class="line">parm:           arp_validate:validate src/dst of ARP probes; 0 for none (default), 1 for active, 2 for backup, 3 for all (charp)</span><br><span class="line">parm:           arp_all_targets:fail on any/all arp targets timeout; 0 for any (default), 1 for all (charp)</span><br><span class="line">parm:           fail_over_mac:For active-backup, do not set all slaves to the same MAC; 0 for none (default), 1 for active, 2 for follow (charp)</span><br><span class="line">parm:           all_slaves_active:Keep all frames received on an interface by setting active flag for all slaves; 0 for never (default), 1 for always. (int)</span><br><span class="line">parm:           resend_igmp:Number of IGMP membership reports to send on link failure (int)</span><br><span class="line">parm:           packets_per_slave:Packets to send per slave in balance-rr mode; 0 for a random slave, 1 packet per slave (default), &gt;1 packets per slave. (int)</span><br><span class="line">parm:           lp_interval:The number of seconds between instances where the bonding driver sends learning packets to each slaves peer switch. The default is 1. (uint)</span><br></pre></td></tr></table></figure><p>当看到有相关配置输出的时候则说明当前操作系统的内核版本是支持bond的</p><h2 id="bond模式"><a href="#bond模式" class="headerlink" title="bond模式"></a>bond模式</h2><p><strong>bonding的七种工作模式:</strong> </p><p>bonding技术提供了七种工作模式，在使用的时候需要指定一种，每种有各自的优缺点.</p><ol><li>balance-rr (mode=0)       默认, 有高可用 (容错) 和负载均衡的功能,  需要交换机的配置，每块网卡轮询发包 (流量分发比较均衡).</li><li>active-backup (mode=1)  只有高可用 (容错) 功能, 不需要交换机配置, 这种模式只有一块网卡工作, 对外只有一个mac地址。缺点是端口利用率比较低</li><li>balance-xor (mode=2)     不常用</li><li>broadcast (mode=3)        不常用</li><li>802.3ad (mode=4)          IEEE 802.3ad 动态链路聚合，需要交换机配置，没用过</li><li>balance-tlb (mode=5)      不常用</li><li>balance-alb (mode=6)     有高可用 ( 容错 )和负载均衡的功能，不需要交换机配置  (流量分发到每个接口不是特别均衡)</li></ol><p>具体的网上有很多资料，了解每种模式的特点根据自己的选择就行, 一般会用到0、1、4、6这几种模式。</p><p>一般常用的常用的有两种：</p><p>  <strong>mode=0（balance-rr）</strong></p><p>​    表示负载分担round-robin，并且是轮询的方式比如第一个包走eth0，第二个包走eth1，直到数据包发送完毕。</p><p>​    优点：流量提高一倍</p><p>​    缺点：需要接入交换机做端口聚合，否则可能无法使用</p><p>  <strong>mode=1（active-backup）</strong></p><p>​    表示主备模式，即同时只有1块网卡在工作。</p><p>​    优点：冗余性高</p><p>​    缺点：链路利用率低，两块网卡只有1块在工作</p><h1 id="实践操作"><a href="#实践操作" class="headerlink" title="实践操作"></a>实践操作</h1><h2 id="配置子网卡"><a href="#配置子网卡" class="headerlink" title="配置子网卡"></a>配置子网卡</h2><p><strong>源文件内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx001 network-scripts]# cat ifcfg-p1p1</span><br><span class="line">DEVICE=&quot;p1p1&quot;</span><br><span class="line">BOOTPROTO=&quot;dhcp&quot;</span><br><span class="line">DHCP_HOSTNAME=&quot;bigdata&quot;</span><br><span class="line">HWADDR=&quot;D0:94:66:5B:76:89&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;no&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">UUID=&quot;9126f785-f642-4ce4-84d8-558284f17623&quot;</span><br></pre></td></tr></table></figure><p><strong>修改后的文件内容如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx001 network-scripts]# cat ifcfg-p1p1</span><br><span class="line">DEVICE=&quot;p1p1&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DHCP_HOSTNAME=&quot;bigdata&quot;</span><br><span class="line">HWADDR=&quot;D0:94:66:5B:76:89&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">UUID=&quot;9126f785-f642-4ce4-84d8-558284f17623&quot;</span><br><span class="line">MASTER=bond1</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure><p>同样的，在第二块网卡上进行配置，配置之后的文件内容如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx001 network-scripts]# cat  ifcfg-p1p2</span><br><span class="line">DEVICE=&quot;p1p2&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DHCP_HOSTNAME=&quot;bigdata&quot;</span><br><span class="line">HWADDR=&quot;D0:94:66:5B:76:8A&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">UUID=&quot;a89099a9-0852-4c43-bef3-07e3999ec597&quot;</span><br><span class="line">MASTER=bond1</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure><h2 id="配置bond网卡"><a href="#配置bond网卡" class="headerlink" title="配置bond网卡"></a>配置bond网卡</h2><p>子网卡配置完毕之后，我们开始配置bond网卡，vim创建文件，填入以下内容之后，保存退出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx001 network-scripts]# vim ifcfg-bond1</span><br><span class="line">DEVICE=&quot;bond1&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">MTU=&quot;1500&quot;</span><br><span class="line">NM_CONTROLLED=&quot;yes&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">IPADDR=103.13.244.21</span><br><span class="line">NETMASK=255.255.255.248</span><br><span class="line">GATEWAY=103.13.244.17</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Linux服务器双网卡bond配置
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="高并发" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
      <category term="负载均衡" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="二层负载均衡" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/%E4%BA%8C%E5%B1%82%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
    
      <category term="负载均衡" scheme="http://yoursite.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python流程控制</title>
    <link href="http://yoursite.com/2018/06/25/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/Python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/Python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2018/06/25/编程语言/Python/个人总结/Python流程控制/Python流程控制/</id>
    <published>2018-06-25T11:32:40.000Z</published>
    <updated>2018-06-25T11:32:40.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Python数据运算</title>
    <link href="http://yoursite.com/2018/06/25/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/Python%E6%95%B0%E6%8D%AE%E8%BF%90%E7%AE%97/Python%E6%95%B0%E6%8D%AE%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2018/06/25/编程语言/Python/个人总结/Python数据运算/Python数据运算/</id>
    <published>2018-06-25T11:32:11.000Z</published>
    <updated>2018-06-25T11:32:11.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Python数据类型</title>
    <link href="http://yoursite.com/2018/06/25/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/06/25/编程语言/Python/个人总结/Python数据类型/Python数据类型/</id>
    <published>2018-06-25T11:29:33.000Z</published>
    <updated>2018-06-25T11:29:33.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>LVS+Keepalived配置文件模板</title>
    <link href="http://yoursite.com/2018/06/25/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/LVS/LVS-Keepalived%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF/"/>
    <id>http://yoursite.com/2018/06/25/IT科学技术知识体系结构-Linux运维方向/高并发/负载均衡/LVS/LVS-Keepalived配置文件模板/</id>
    <published>2018-06-25T09:57:30.000Z</published>
    <updated>2018-06-25T09:57:30.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>LVS的三种工作模式</title>
    <link href="http://yoursite.com/2018/06/25/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/LVS/LVS%E7%9A%84%E4%B8%89%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/06/25/IT科学技术知识体系结构-Linux运维方向/高并发/负载均衡/LVS/LVS的三种工作模式/</id>
    <published>2018-06-25T09:51:40.000Z</published>
    <updated>2018-06-25T09:51:40.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>Chrome常用操作</title>
    <link href="http://yoursite.com/2018/06/25/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Chrome/Chrome%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/06/25/常用软件工具/Chrome/Chrome常用操作/</id>
    <published>2018-06-25T07:39:26.000Z</published>
    <updated>2018-06-25T07:39:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考文献：</strong></p><ul><li><a href="https://support.google.com/chrome/answer/157179?hl=zh-Hans" target="_blank" rel="noopener">chrome键盘快捷键</a></li></ul><hr><h1 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h1><h2 id="书签管理"><a href="#书签管理" class="headerlink" title="书签管理"></a>书签管理</h2><h3 id="书签管理器"><a href="#书签管理器" class="headerlink" title="书签管理器"></a>书签管理器</h3><p>ctrl+shift+o</p><h3 id="为此网页添加书签"><a href="#为此网页添加书签" class="headerlink" title="为此网页添加书签"></a>为此网页添加书签</h3><p>ctrl+d</p><h2 id="浏览器管理"><a href="#浏览器管理" class="headerlink" title="浏览器管理"></a>浏览器管理</h2><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>在搜索框中输入相对应的名称，然后tab</p><p>例如在搜索框中，输入：baidu.com 然后tab，然后再输入内容，此时就是使用百度搜索引擎来进行搜索。</p><h3 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h3><h4 id="切换页面"><a href="#切换页面" class="headerlink" title="切换页面"></a>切换页面</h4><p>显示前一个标签页：ctrl+tab</p><p>显示后一个标签页：ctrl+shift+tab</p><h4 id="新增页面"><a href="#新增页面" class="headerlink" title="新增页面"></a>新增页面</h4><p>ctrl+t</p>]]></content>
    
    <summary type="html">
    
      Chrome常用操作
    
    </summary>
    
      <category term="常用软件工具" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Chrome" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Chrome/"/>
    
    
      <category term="Chrome" scheme="http://yoursite.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>LVS的8种调度算法</title>
    <link href="http://yoursite.com/2018/06/25/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E9%AB%98%E5%B9%B6%E5%8F%91/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/LVS/LVS%E7%9A%848%E7%A7%8D%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2018/06/25/IT科学技术知识体系结构-Linux运维方向/高并发/负载均衡/LVS/LVS的8种调度算法/</id>
    <published>2018-06-25T07:37:09.000Z</published>
    <updated>2018-06-25T07:37:09.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="tag1" scheme="http://yoursite.com/tags/tag1/"/>
    
  </entry>
  
  <entry>
    <title>第1章：中国人学习英语的误区</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%B7%9F%E6%81%B6%E9%AD%94%E5%A5%B6%E7%88%B8%E5%AD%A6%E8%8B%B1%E8%AF%AD/%E7%AC%AC1%E7%AB%A0%EF%BC%9A%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%8B%B1%E8%AF%AD%E7%9A%84%E8%AF%AF%E5%8C%BA/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/英语学习/跟恶魔奶爸学英语/第1章：中国人学习英语的误区/</id>
    <published>2018-06-24T12:20:41.000Z</published>
    <updated>2018-06-24T12:20:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="神功大力丸思想"><a href="#神功大力丸思想" class="headerlink" title="神功大力丸思想"></a>神功大力丸思想</h1><p>大部分人幻想通过一套教材就能够解决英语的所有问题，幻想简单、高效、快速、直接的一种方法，解决学习英语中遇到的所有难题</p><p>国内这种大力丸的思想的起源基本是来自于老师群体，培训机构的老师群体，把这种理念和方法进行包装，试图以一种简单的策略来解决所有的英语问题</p><p>语言学习是一个复杂的整体，分为不同的阶段，每个阶段的重点都不一样，需要选用的教材，方法，策略也都不一样。并且，因为每个人的学习习惯和作息习惯都不一样，因此选用的学习策略自然也不应该相同</p><p>在整个英语学习过程当中，需要输入大量的听力和阅读材料，不能只靠一套课本就彻底解决所有问题，你需要认真分析你所处的水平基础（每个人的水平和基础不一样），灵活选择不同的教材和不同的方法策略</p><p>国内的学习者总是喜欢想当然，一定要在某种方法和达到某种水平之间建立因果关系，也就是说，他们做了某事，就一定可以收获什么，如果说我不能收获到成果，可能不是因为方法材料不适合，而只是因为我不够努力和坚持。盲目应用不适合自己的方法和教材</p><p><img src="http://picture.watchmen.xin/naiba/allinone.png" alt="allinone"></p><h1 id="坚持一切以考试为核心"><a href="#坚持一切以考试为核心" class="headerlink" title="坚持一切以考试为核心"></a>坚持一切以考试为核心</h1>]]></content>
    
    <summary type="html">
    
      第1章：中国人学习英语的误区
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="英语学习" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="跟恶魔奶爸学英语" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E8%B7%9F%E6%81%B6%E9%AD%94%E5%A5%B6%E7%88%B8%E5%AD%A6%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="英语学习" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>认知升级之第一性原理-李善友</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%B7%B7%E6%B2%8C%E5%A4%A7%E5%AD%A6/%E8%AE%A4%E7%9F%A5%E5%8D%87%E7%BA%A7%E4%B9%8B%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86-%E6%9D%8E%E5%96%84%E5%8F%8B/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/混沌大学/认知升级之第一性原理-李善友/</id>
    <published>2018-06-24T07:41:44.000Z</published>
    <updated>2018-06-24T07:41:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言概述"><a href="#前言概述" class="headerlink" title="前言概述"></a>前言概述</h1><h1 id="模型1：刻意练习"><a href="#模型1：刻意练习" class="headerlink" title="模型1：刻意练习"></a>模型1：刻意练习</h1><p>刻意练习的主要目的是创建有效的心理表征</p><h2 id="刻意练习的方法论"><a href="#刻意练习的方法论" class="headerlink" title="刻意练习的方法论"></a>刻意练习的方法论</h2><p>超过三条方法论就有点称不上方法论，因为会太复杂了。</p><p><strong>1. 创建模型</strong> 【刻意练习中最重要的方法论】</p><p><strong>2. 刻意练习</strong></p><p><strong>3. 及时反馈</strong></p><h2 id="第1步：创建模型"><a href="#第1步：创建模型" class="headerlink" title="第1步：创建模型"></a>第1步：创建模型</h2><h2 id="第2步：刻意练习"><a href="#第2步：刻意练习" class="headerlink" title="第2步：刻意练习"></a>第2步：刻意练习</h2><h2 id="第3步：及时反馈"><a href="#第3步：及时反馈" class="headerlink" title="第3步：及时反馈"></a>第3步：及时反馈</h2><h2 id="刻意练习的注意事项"><a href="#刻意练习的注意事项" class="headerlink" title="刻意练习的注意事项"></a>刻意练习的注意事项</h2><h2 id="实例案例"><a href="#实例案例" class="headerlink" title="实例案例"></a>实例案例</h2><h3 id="李叫兽"><a href="#李叫兽" class="headerlink" title="李叫兽"></a>李叫兽</h3><h1 id="模型2：第一性原理"><a href="#模型2：第一性原理" class="headerlink" title="模型2：第一性原理"></a>模型2：第一性原理</h1><h1 id="模型3：牛顿-机械论"><a href="#模型3：牛顿-机械论" class="headerlink" title="模型3：牛顿-机械论"></a>模型3：牛顿-机械论</h1><h1 id="模型4：达尔文-自然选择"><a href="#模型4：达尔文-自然选择" class="headerlink" title="模型4：达尔文-自然选择"></a>模型4：达尔文-自然选择</h1>]]></content>
    
    <summary type="html">
    
      认知升级之第一性原理-李善友
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="混沌大学" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%B7%B7%E6%B2%8C%E5%A4%A7%E5%AD%A6/"/>
    
      <category term="认知升级之第一性原理-李善友" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%B7%B7%E6%B2%8C%E5%A4%A7%E5%AD%A6/%E8%AE%A4%E7%9F%A5%E5%8D%87%E7%BA%A7%E4%B9%8B%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86-%E6%9D%8E%E5%96%84%E5%8F%8B/"/>
    
    
      <category term="混沌大学" scheme="http://yoursite.com/tags/%E6%B7%B7%E6%B2%8C%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>《运动与健康》-湖北大学</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6MOOC/%E3%80%8A%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%81%A5%E5%BA%B7%E3%80%8B-%E6%B9%96%E5%8C%97%E5%A4%A7%E5%AD%A6/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/中国大学MOOC/《运动与健康》-湖北大学/</id>
    <published>2018-06-24T07:16:19.000Z</published>
    <updated>2018-06-24T07:16:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章：健康与亚健康"><a href="#第一章：健康与亚健康" class="headerlink" title="第一章：健康与亚健康"></a>第一章：健康与亚健康</h1><h2 id="第一节：你健康吗？"><a href="#第一节：你健康吗？" class="headerlink" title="第一节：你健康吗？"></a>第一节：你健康吗？</h2><p>世界卫生组织对健康的定义：健康是一种全面的身体、心理以及社会幸福的理想状态。包括<strong><code>身体健康，心理健康，社会适应良好和道德健康</code></strong>的理想状态。</p><p> <strong>一：身体健康</strong></p><ul><li>身体健康的特征之一：身体形态与结构发育状况良好。</li></ul><blockquote><p>身体形态具体指的是身体的外部形状和特征，主要包括体型、身体姿势、营养状况及身体成分等方面，反映了人体的生长发育水平，一般通过测量身高体重胸围皮下组织等来考察</p><p>身体结构来看：人体的上部与下部，大腿与小腿，上臂与前臂等比例较协调，较为合理的比值是0.618:1，即我们常说的黄金分割。</p></blockquote><ul><li>身体健康的特征之二：生理机能水平高。</li></ul><blockquote><p>人体身体机能是指人体各器官系统发育是否良好，功能是否健全，运转是否自如等。常见的人体机能衡量指标有：心率、血压、肺活量等</p><p>以心率为例，人的心率与寿命成反比关系，即心跳越慢，寿命越长，心跳越快，寿命越短</p><p>自然界中，乌龟的寿命长达500年以上，它心脏每分钟的跳动次数为至少只有8次，而有一种小鼠，每分钟心跳高达1200次，其寿命只有一年。</p><p>人类研究证实（有科学根据）：如果成人安静时的心率维持在60次/分钟左右，其寿命可以达到93岁。相反，如果安静时的心率大于80次/分钟，其寿命明显缩短</p><p>心率是寿命的标尺</p><p> 经过长期运动训练的人，其安静时的心率，一般维持在60次/分钟左右。</p></blockquote><ul><li>身体健康的特征之三：身体素质好与运动能力强</li></ul><blockquote><p>身体素质是指人体在活动中表现出来的力量、速度、耐力、灵敏、柔韧等机能。身体素质的强弱是衡量一个人体质健康的重要指标之一</p></blockquote><ul><li><p>身体健康的特征之四：身体具有良好的适应能力</p><p>指的是人体在适应内外环境中所表示出来的机能能力。对高温、低温、加速度、旋转等的适应能力</p></li></ul><p><strong>二：心理健康</strong></p><p> 心理健康的特征：</p><ul><li>具有良好的自我控制和调节能力。</li><li>对于外界的刺激有良好的应激能力，心理经常处于平衡和满足状态。</li></ul><p>具体表现为：</p><ul><li>有充分的安全感</li><li>有自知之明</li><li>善于平衡人际关系</li><li>正视现实</li><li>热爱生活</li><li>乐于工作</li><li>能保持人格的完整与和谐</li><li>善于学习、努力进取</li></ul><p><strong>三：道德健康</strong></p><p> 道德健康的基本特征：</p><ul><li>有积极向上的信仰</li><li>高尚的品德与情操、完美的人格</li></ul><p>具体表现：</p><ul><li>作风正派</li><li>遵纪守法</li><li>努力工作</li><li>乐于奉献</li><li>有责任感</li><li>努力进取</li></ul><p><strong>四：社会适应能力</strong></p><p>指人为了在社会上更好生存而进行心理上、生理上以及行为上的各种适应性变化，与社会达到和谐状态的一种执行适应能力。</p><p>一般认为包括以下方面：</p><ul><li>个人生活自理能力</li><li>基本劳动能力</li><li>用道德规范约束自己的能力</li></ul><p>根据统计资料显示：真正按照世界卫生组织的健康标准，健康人不超过15%。而真正有各种疾病的大概也只有15%。也就是说70%人处于健康和疾病之间的第三种状态-亚健康状态。</p><h2 id="第二节：你离亚健康有多远？"><a href="#第二节：你离亚健康有多远？" class="headerlink" title="第二节：你离亚健康有多远？"></a>第二节：你离亚健康有多远？</h2>]]></content>
    
    <summary type="html">
    
      《运动与健康》-湖北大学
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="中国大学MOOC" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6MOOC/"/>
    
      <category term="《运动与健康》-湖北大学" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6MOOC/%E3%80%8A%E8%BF%90%E5%8A%A8%E4%B8%8E%E5%81%A5%E5%BA%B7%E3%80%8B-%E6%B9%96%E5%8C%97%E5%A4%A7%E5%AD%A6/"/>
    
    
      <category term="中国大学MOOC" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6MOOC/"/>
    
  </entry>
  
  <entry>
    <title>《鞠强教授暨嫡传弟子团:管理心理学之技巧与理论》</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85FM/%E3%80%8A%E9%9E%A0%E5%BC%BA%E6%95%99%E6%8E%88%E6%9A%A8%E5%AB%A1%E4%BC%A0%E5%BC%9F%E5%AD%90%E5%9B%A2-%E7%AE%A1%E7%90%86%E5%BF%83%E7%90%86%E5%AD%A6%E4%B9%8B%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%90%86%E8%AE%BA%E3%80%8B/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/喜马拉雅FM/《鞠强教授暨嫡传弟子团-管理心理学之技巧与理论》/</id>
    <published>2018-06-24T07:09:03.000Z</published>
    <updated>2018-06-24T07:09:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="市场细分化理解深化"><a href="#市场细分化理解深化" class="headerlink" title="市场细分化理解深化"></a>市场细分化理解深化</h1><h1 id="中国历史为什么大统一是主流"><a href="#中国历史为什么大统一是主流" class="headerlink" title="中国历史为什么大统一是主流"></a>中国历史为什么大统一是主流</h1><h1 id="拖延症最大的坏处不是效率低-是什么呢？"><a href="#拖延症最大的坏处不是效率低-是什么呢？" class="headerlink" title="拖延症最大的坏处不是效率低-是什么呢？"></a>拖延症最大的坏处不是效率低-是什么呢？</h1><h1 id="矛盾营销信息成本高"><a href="#矛盾营销信息成本高" class="headerlink" title="矛盾营销信息成本高"></a>矛盾营销信息成本高</h1>]]></content>
    
    <summary type="html">
    
      《鞠强教授暨嫡传弟子团:管理心理学之技巧与理论》
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="喜马拉雅FM" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85FM/"/>
    
      <category term="鞠强教授暨嫡传弟子团:管理心理学之技巧与理论" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85FM/%E9%9E%A0%E5%BC%BA%E6%95%99%E6%8E%88%E6%9A%A8%E5%AB%A1%E4%BC%A0%E5%BC%9F%E5%AD%90%E5%9B%A2-%E7%AE%A1%E7%90%86%E5%BF%83%E7%90%86%E5%AD%A6%E4%B9%8B%E6%8A%80%E5%B7%A7%E4%B8%8E%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="喜马拉雅FM" scheme="http://yoursite.com/tags/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85FM/"/>
    
  </entry>
  
  <entry>
    <title>每日碎片知识梳理-2018年</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%AF%8F%E6%97%A5%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/2018%E5%B9%B4/%E6%AF%8F%E6%97%A5%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86-2018%E5%B9%B4/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/每日碎片知识梳理/2018年/每日碎片知识梳理-2018年/</id>
    <published>2018-06-24T05:52:04.000Z</published>
    <updated>2018-06-24T05:52:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018年6月"><a href="#2018年6月" class="headerlink" title="2018年6月"></a>2018年6月</h1><h2 id="6月24日"><a href="#6月24日" class="headerlink" title="6月24日"></a>6月24日</h2><p><strong>标题：为泡妞之成功而读书</strong></p><ul><li>来源：《得到》-逻辑思维-第20期</li></ul><p><strong>内容：</strong></p><ul><li>传统的知识构成和今天我们要面对的知识构成是有区别的</li></ul><blockquote><p>近代化以来，教育是人类一项沉重的负担，因为随着工业化的发展，各个门类的知识持续增长，所以就必须建立一个体系，将这些知识灌输给年轻人</p></blockquote><h2 id="6月25日"><a href="#6月25日" class="headerlink" title="6月25日"></a>6月25日</h2>]]></content>
    
    <summary type="html">
    
      每日碎片知识梳理-2018年
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="每日碎片知识梳理" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%AF%8F%E6%97%A5%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/"/>
    
      <category term="2018年" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E6%AF%8F%E6%97%A5%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/2018%E5%B9%B4/"/>
    
    
      <category term="每日碎片知识梳理" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>《刻意练习》</title>
    <link href="http://yoursite.com/2018/06/24/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8A%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E3%80%8B/"/>
    <id>http://yoursite.com/2018/06/24/个人知识体系/读书笔记/《刻意练习》/</id>
    <published>2018-06-24T05:05:39.000Z</published>
    <updated>2018-06-24T05:05:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="书籍信息"><a href="#书籍信息" class="headerlink" title="书籍信息"></a>书籍信息</h1><h1 id="思维导图-读后感解析"><a href="#思维导图-读后感解析" class="headerlink" title="思维导图-读后感解析"></a>思维导图-读后感解析</h1><h1 id="一些补充"><a href="#一些补充" class="headerlink" title="一些补充"></a>一些补充</h1>]]></content>
    
    <summary type="html">
    
      《刻意练习》读书笔记
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>神器-Typora</title>
    <link href="http://yoursite.com/2018/06/24/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Markdown/%E7%A5%9E%E5%99%A8-Typora/"/>
    <id>http://yoursite.com/2018/06/24/常用软件工具/Markdown/神器-Typora/</id>
    <published>2018-06-24T04:05:16.000Z</published>
    <updated>2018-06-24T04:05:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考文献：</strong></p><ul><li><u><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora官方网站</a></u></li></ul><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p><strong>官方说明：</strong></p><blockquote><p>Typora will give you a seamless experience as both a reader and a writer. It removes the preview window, mode switcher, syntax symbols of markdown source code, and all other unnecessary distractions. Replace them with a real live preview feature to help you concentrate the content itself. </p></blockquote><p>Markdown 编辑器，比较常见的是双栏布局：左边敲源码，右边显示渲染结果。 </p><p>但是Typora 是单栏布局，是真正意义上的所见即所得，摒弃了传统的markdown编辑器的分栏设置（例如markdown pad 2左边是源码，右边是渲染之后的显示效果）以及其他非必须的内容，书写时直接显示成效图。光标一离开，就立刻显示为想要的样子，并且由用户选择何时进入源码模式（输入ctrl+/即可切换源码编辑模式）</p><h1 id="入门实践"><a href="#入门实践" class="headerlink" title="入门实践"></a>入门实践</h1><h2 id="快捷键操作"><a href="#快捷键操作" class="headerlink" title="快捷键操作"></a>快捷键操作</h2><h3 id="标题操作"><a href="#标题操作" class="headerlink" title="标题操作"></a>标题操作</h3><p><strong>插入标题：</strong></p><ul><li><strong>一级标题：</strong>ctrl+1</li><li><strong>二级标题：</strong>ctrl+2</li><li><strong>三级标题：</strong>ctrl+3</li><li><strong>四级标题：</strong>ctrl+4</li><li><strong>五级标题：</strong>ctrl+5</li></ul><p><strong>增大标题级别：</strong>ctrl + =</p><p><strong>减小标题级别：</strong>ctrl + -</p><h3 id="表格操作"><a href="#表格操作" class="headerlink" title="表格操作"></a>表格操作</h3><p><strong>插入表格：</strong></p><ul><li><p>编辑器中插入</p><blockquote><p>直接<strong><code>ctrl+t</code></strong>插入表格，并且在弹出的提示框中可以自由选择表格的行和列数</p></blockquote></li><li><p>外部复制（excel等专业表格软件中复制）</p><blockquote><p>直接复制即可，Typora会自动把excel的格式转换为markdown的语法格式</p></blockquote></li></ul><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><ul><li><p>行内代码块</p><blockquote><p>使用``号将内容包含即可，快捷键为：ctrl+shift+反引号</p></blockquote></li><li><p>行代码块</p><blockquote><p>在开头输入```然后回车，在下方输入内容，内容将会自动的变成代码块的形式</p></blockquote></li><li><p>指定格式的行代码块</p><blockquote><p>在开头输入```bash/python/ruby然后回车，在下方输入内容，内容将会自动的变成指定代码块的形式</p></blockquote></li></ul><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li><p>基础无序列表： 使用 - content 即可</p></li><li><p>完成/未完成列表：<code>-[] content or - [x] content</code></p></li><li><p>无序列表缩进问题</p><ul><li>增大列表缩进（也就是右移，子列表）：ctrl+]</li><li>减小列表缩进（也就是左移，父列表）：ctrl+[</li></ul></li></ul><h3 id="网页链接与图片"><a href="#网页链接与图片" class="headerlink" title="网页链接与图片"></a>网页链接与图片</h3><ul><li><p>编辑器中插入网页超链接</p><blockquote><p>直接ctrl+k即可出现相对应的格式</p></blockquote></li><li><p>给文字加上超链接</p><blockquote><p>只需拷贝链接，然后选中文字，按一下ctrl + k，链接就添上了 </p></blockquote></li><li><p>编辑器中插入图片</p><blockquote><p>ctrl+shift+i</p></blockquote></li><li><p>图片拖拽</p><blockquote><p>这个功能可以将拖入图片转化为插入图片，但是这个功能默认是关闭的，需要在设置中手动开启，设置的路径为: Preferences -&gt; Editor</p></blockquote></li></ul><h3 id="切换源码-预览模式"><a href="#切换源码-预览模式" class="headerlink" title="切换源码/预览模式"></a>切换源码/预览模式</h3><p>输入ctrl+/可以再源码模式和成像预览模式之间进行来回切换</p><h3 id="其他常用操作"><a href="#其他常用操作" class="headerlink" title="其他常用操作"></a>其他常用操作</h3><ul><li>文字加粗：ctrl+b</li><li>文字倾斜：ctrl+i</li><li>文字下划线：ctrl+u</li><li>文字删除线：两个波浪线分别在文字的两边<code>~~content~~</code></li><li>清除格式：ctrl+\</li></ul><h3 id="生成目录"><a href="#生成目录" class="headerlink" title="生成目录"></a>生成目录</h3><p>输出[toc]然后回车，将会自动产生一个目录，这个目录抽取了文章的所有标题，自动更新内容</p><h2 id="软件本身操作"><a href="#软件本身操作" class="headerlink" title="软件本身操作"></a>软件本身操作</h2><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="快速打开"><a href="#快速打开" class="headerlink" title="快速打开"></a>快速打开</h4><p>输入ctrl+p之后，输入关键字，它会在当前文件夹下进行搜索</p><h4 id="打开文件位置"><a href="#打开文件位置" class="headerlink" title="打开文件位置"></a>打开文件位置</h4><p>点击文件之后，在侧边栏中会有<code>打开文件位置</code>的选项，它能进入该文件所在的目录，这个功能十分的方便。</p><h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><p>ctrl+f 进行查找</p><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><p>ctrl+h进行替换</p><h4 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h4><p>在其中的空格与换行中，有首行缩进的选项，选中之后，会把所有内容中的首行内容进行缩进两个空格。</p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>ctrl+shitf+`</p><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><p>alt+shift+5</p><h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><p><code>==</code>content<code>==</code></p><p>效果如下：</p><p>==content==</p><h4 id="清除样式"><a href="#清除样式" class="headerlink" title="清除样式"></a>清除样式</h4><p>ctrl+\</p>]]></content>
    
    <summary type="html">
    
      Typora软件使用
    
    </summary>
    
      <category term="常用软件工具" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Markdown/"/>
    
    
      <category term="Typora" scheme="http://yoursite.com/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>LF will be replaced by CRLF报警</title>
    <link href="http://yoursite.com/2018/06/23/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Git/CRLF%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2018/06/23/常用软件工具/Git/CRLF解决/</id>
    <published>2018-06-23T14:08:24.000Z</published>
    <updated>2018-06-23T14:08:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows环境下使用git进行add的时候，会提示： “warning:LF will be replacee by CRLF”</p><p><strong>基本信息：</strong></p><p>CRLF – Carriage-Return Line-Feed 回车换行</p><ul><li><p>回车(CR, 对应 ASCII 13, \r) </p></li><li><p>换行(LF, ASCII 10, \n)。 </p></li></ul><p>这里放上ASCII字符代码表的前半部分，可以直观的看到</p><p><img src="http://picture.watchmen.xin/python-14/ASCII.jpg" alt="ascii"></p><p><strong>注意：</strong></p><p>这两个标识换行的ACSII字符不会在屏幕有任何输出，在Windows中广泛使用\r\n来标识一行的结束。而在Linux/UNIX系统中只使用\n来标识一行的结束。</p><p>这一点经常在windows和linux平台上进行操作的小伙伴基本都知道</p><p>也就是说在windows中的换行符为 CRLF， 而在linux下的换行符为：LF</p><p><strong>原因分析：</strong></p><p>git配置中设置 core.autocrlf=true 后：</p><ul><li>当我们执行git add将文件转入到暂存区时，系统将会把LF转换成CRLF</li></ul><ul><li>当我们执行commit提交时，会把暂存区的内容(也就是我们对工作区做的改动)再重新转化为LF然后放入版本库(repository)</li></ul><ul><li>从工作区转化暂存区时，如果发现里面存在 LF 换行符，LF 会被转化成 CRLF，并给出提到的那条警告：”LF will be replaced by CRLF”</li></ul><ul><li>这里有一个重要的知识点：git创建的项目，暂存区和运行平台挂钩，但是最终项目文件在版本库(repository)中的换行符是为LF【因为git最终是运行在Linux平台之上】</li></ul><p>其实这句警告的下面其实还有一句很重要的话:</p><pre><code>warning: LF will be replaced by CRLF in . The file will have its original line endings in your working directory. </code></pre><p>(翻译下就是:“在工作区里,这个文件会保持它原本的换行符，也就是LF和CRLF混合存在。”) </p><p><strong>深入延伸扩展</strong></p><blockquote><p>简单来说，在windows平台，我们工作区的文件都应该用 CRLF 来换行。如果改动文件时引入了 LF,或者设置 core.autocrlf 之前,工作区已经有 LF 换行符。那么提交改动时,git 会警告你哪些文件不是纯 CRLF 文件,但 git 不会擅自修改工作区的那些文件,而是对暂存区(我们对工作区的改动)进行修改。</p><p>也因此,当我们进行 git add 的操作时,只要 git 发现改动的内容里有 LF 换行符,就还会出现这个警告。</p><p>设置 core.autocrlf=true, 只要保持工作区都是纯 CRLF 文件,编辑器用 CRLF 换行,就不会出现警告。</p><p>git 默认让版本库里用 LF 换行,只要保持这条规则,多人协作就不会出什么大问题。</p><p>git 的 Windows 客户端基本都会默认设置 core.autocrlf=trueLinux 最好不要重新设置,因为这个配置算是为 Windows 平台定制。</p><p>如果 Windows 上设置 core.autocrlf=false,仓库里也没有配置 .gitattributes,很容易引入 CRLF 或者混合换行符(Mixed Line Endings,一个文件里既有 LF 又有CRLF)到版本库,这样就可能产生各种奇怪的问题。</p><p>如果有换行符不匹配本地平台的情况,建议你用 dos2unix 之类的工具转换下换行符,因为很多配置文件是严格要求文件编码和换行符的,谨慎一点比较好。 </p></blockquote><p><strong>问题解决：</strong></p><p>因为如果 Windows 上设置 core.autocrlf=false,仓库里也没有配置 .gitattributes,很容易引入 CRLF 或者混合换行符(Mixed Line Endings,一个文件里既有 LF 又有CRLF)到版本库,这样就可能产生各种奇怪的问题。</p><p>所以，解决最好保持工作区都是纯 CRLF 文件,编辑器用 CRLF 换行,就不会出现警告。</p><p>首先<code>core.autocrlf = true</code>在windows上才是正确的选择，不建议将其修改为false（网上大部分的解决方法都是：rm -rf .git &amp;&amp; git config –global core.autocrlf false &amp;&amp; git init &amp;&amp; git add . &amp;&amp; git remote add xx 这种解决方式，其实不是太友好），如果实在忍受不了，想要避免这些warning，那么执行下面的操作：</p><ol><li>添加.gitattributes</li><li>设置<code>core.safecrlf = true</code></li><li>使用dos2unix、notepad++等工具来将LF转换成CRLF</li></ol><p>所以，建议保持默认效果</p>]]></content>
    
    <summary type="html">
    
      LF will be replaced by CRLF报警问题
    
    </summary>
    
      <category term="常用软件工具" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Git" scheme="http://yoursite.com/categories/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>修改主题超链接样式</title>
    <link href="http://yoursite.com/2018/06/23/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo/%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E8%B6%85%E9%93%BE%E6%8E%A5%E6%A0%B7%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/06/23/个人知识体系/个人博客/Hexo/修改主题超链接样式/</id>
    <published>2018-06-23T10:56:27.000Z</published>
    <updated>2018-06-23T10:56:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为我使用的是Next主题，这里说下Next主题的修改，其他主题的操作也都是一致的</p><p>Next默认对超链接只有下划线样式，在查看文章内容的时候很容易被忽略</p><p>主题样式是在\hexoBlog\themes\next\source\css,这里面保存了Muse,Mist和Pisces等主题的css文件</p><p>例如,字体和边框的颜色还有字体,图片的大小等保存在next\source\css_variables里.</p><p>而我们要修改的body超链接的样式在themes\next\source\css_common\components\post\post.styl里,编辑文件，在文件中添加以下内容:</p><pre><code>.post-body a {  color: #428BCA;  font-weight: bold;}</code></pre><p>添加以后，我们需要执行clean操作生效</p><pre><code>hexo clean hexo g -d</code></pre><p>强制刷新我们的文章内容，就能看到超链接已经变成蓝色粗体的形式</p><p>如下图所示：</p><p><img src="http://picture.watchmen.xin/tmp/next_css.png" alt="css"></p>]]></content>
    
    <summary type="html">
    
      修改主题超链接样式
    
    </summary>
    
      <category term="个人知识体系" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
      <category term="个人博客" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>fio命令</title>
    <link href="http://yoursite.com/2018/06/19/fio/"/>
    <id>http://yoursite.com/2018/06/19/fio/</id>
    <published>2018-06-19T03:51:18.000Z</published>
    <updated>2018-06-19T03:51:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><pre><code># yum -y install git libaio libaio-devel zlib-devel gcc# git clone git://github.com/axboe/fio.git# cd fio/# ./configure &amp;&amp; make &amp;&amp; make install </code></pre><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="IOPS测试"><a href="#IOPS测试" class="headerlink" title="IOPS测试"></a>IOPS测试</h2><p>fio -direct=1 -iodepth=64 -rw=randrw -ioengine=libaio -bs=4k -size=1G -numjobs=1  -group_reporting -filename=iotest -name=Write_PPS_Testing</p><h2 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h2>]]></content>
    
    <summary type="html">
    
      fio命令
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="Linux基础知识" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
      <category term="Linux常用命令" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="fio" scheme="http://yoursite.com/tags/fio/"/>
    
  </entry>
  
  <entry>
    <title>nginx入门介绍及安装配置</title>
    <link href="http://yoursite.com/2018/06/14/nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/06/14/nginx安装配置/</id>
    <published>2018-06-14T03:59:24.000Z</published>
    <updated>2018-06-14T03:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><ul><li><a href="https://nginx.org/en/" target="_blank" rel="noopener">官网链接</a></li><li><a href="https://nginx.org/en/download.html" target="_blank" rel="noopener">下载页面</a></li></ul><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>登录服务器之后，wget下载相应版本的源码包</p><pre><code># wget https://nginx.org/download/nginx-1.14.0.tar.gz</code></pre><p>./configure –prefix=/usr/local/nginx –user=nginx –group=nginx –with-http_ssl_module –with-http_stub_status_module –with-pcre</p>]]></content>
    
    <summary type="html">
    
      nginx入门介绍及安装配置
    
    </summary>
    
      <category term="IT科学技术知识体系结构-Linux运维方向" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/"/>
    
      <category term="网络服务" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="Nginx" scheme="http://yoursite.com/categories/IT%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-Linux%E8%BF%90%E7%BB%B4%E6%96%B9%E5%90%91/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
</feed>
